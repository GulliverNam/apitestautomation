{
  "collection": {
    "_": {
      "postman_id": "9881baa0-9dad-4ad2-a00d-d38f7efee75e"
    },
    "item": [
      {
        "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
        "name": "pet",
        "item": [
          {
            "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
            "name": "Update an existing pet",
            "request": {
              "name": "Update an existing pet",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                "name": "Invalid ID supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                "name": "Pet not found",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                "name": "Validation exception",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                  ],
                  "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                }
              }
            ]
          },
          {
            "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
            "name": "Add a new pet to the store",
            "request": {
              "name": "Add a new pet to the store",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                "name": "Invalid input",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                  ],
                  "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                }
              }
            ]
          },
          {
            "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
            "name": "Finds Pets by status",
            "request": {
              "name": "Finds Pets by status",
              "description": {
                "content": "Multiple status values can be provided with comma separated strings",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByStatus"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  },
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                "name": "Invalid status value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                }
              }
            ]
          },
          {
            "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
            "name": "Finds Pets by tags",
            "request": {
              "name": "Finds Pets by tags",
              "description": {
                "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByTags"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                "name": "Invalid tag value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                }
              }
            ]
          },
          {
            "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
            "name": "{pet Id}",
            "item": [
              {
                "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                "name": "Find pet by ID",
                "request": {
                  "name": "Find pet by ID",
                  "description": {
                    "content": "Returns a single pet",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to return",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": ""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                    }
                  }
                ]
              },
              {
                "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                "name": "Updates a pet in the store with form data",
                "request": {
                  "name": "Updates a pet in the store with form data",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet that needs to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "description": {
                          "content": "Updated name of the pet",
                          "type": "text/plain"
                        },
                        "key": "name",
                        "value": "<string>"
                      },
                      {
                        "description": {
                          "content": "Updated status of the pet",
                          "type": "text/plain"
                        },
                        "key": "status",
                        "value": "<string>"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                    "name": "Invalid input",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "urlencoded",
                        "urlencoded": [
                          {
                            "description": {
                              "content": "Updated name of the pet",
                              "type": "text/plain"
                            },
                            "key": "name",
                            "value": "<string>"
                          },
                          {
                            "description": {
                              "content": "Updated status of the pet",
                              "type": "text/plain"
                            },
                            "key": "status",
                            "value": "<string>"
                          }
                        ]
                      }
                    },
                    "status": "Method Not Allowed",
                    "code": 405,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                    }
                  }
                ]
              },
              {
                "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                "name": "Deletes a pet",
                "request": {
                  "name": "Deletes a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) Pet id to delete",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": "<string>"
                    }
                  ],
                  "method": "DELETE",
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                    }
                  }
                ]
              },
              {
                "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                "name": "uploads an image",
                "request": {
                  "name": "uploads an image",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId",
                      "uploadImage"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to update",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "multipart/form-data"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "description": {
                          "content": "Additional data to pass to server",
                          "type": "text/plain"
                        },
                        "key": "additionalMetadata",
                        "value": "<string>",
                        "type": "text"
                      },
                      {
                        "description": {
                          "content": "file to upload",
                          "type": "text/plain"
                        },
                        "key": "file",
                        "value": "<binary>",
                        "type": "text"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId",
                          "uploadImage"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "formdata",
                        "formdata": [
                          {
                            "description": {
                              "content": "Additional data to pass to server",
                              "type": "text/plain"
                            },
                            "key": "additionalMetadata",
                            "value": "<string>",
                            "type": "text"
                          },
                          {
                            "description": {
                              "content": "file to upload",
                              "type": "text/plain"
                            },
                            "key": "file",
                            "value": "<binary>",
                            "type": "text"
                          }
                        ]
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "d2f04c50-38f7-42ee-be8f-fbcbccb48d23",
        "name": "store",
        "item": [
          {
            "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
            "name": "Returns pet inventories by status",
            "request": {
              "name": "Returns pet inventories by status",
              "description": {
                "content": "Returns a map of status codes to quantities",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "store",
                  "inventory"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "api_key",
                  "value": ""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "store",
                      "inventory"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"culpa tempor occaecat\"",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
                }
              }
            ]
          },
          {
            "id": "1df0f01c-eb87-4aac-9236-30ffdd39da2e",
            "name": "order",
            "item": [
              {
                "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
                "name": "Place an order for a pet",
                "request": {
                  "name": "Place an order for a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "store",
                      "order"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
                    "name": "Invalid Order",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
                    }
                  }
                ]
              },
              {
                "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
                "name": "{order Id}",
                "item": [
                  {
                    "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
                    "name": "Find purchase order by ID",
                    "request": {
                      "name": "Find purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of pet that needs to be fetched",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "GET"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "json"
                        },
                        "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                        "name": "successful operation",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "OK",
                        "code": 200,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e837617d-3a03-4408-9018-a37c69c35e28",
                    "name": "Delete purchase order by ID",
                    "request": {
                      "name": "Delete purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of the order that needs to be deleted",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "DELETE"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
        "name": "user",
        "item": [
          {
            "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
            "name": "Create user",
            "request": {
              "name": "Create user",
              "description": {
                "content": "This can only be done by the logged in user.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                }
              }
            ]
          },
          {
            "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithArray"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithArray"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f0e29816-a655-446b-9de3-8347547298a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                }
              }
            ]
          },
          {
            "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithList"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithList"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                }
              }
            ]
          },
          {
            "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
            "name": "Logs user into the system",
            "request": {
              "name": "Logs user into the system",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) The user name for login",
                      "type": "text/plain"
                    },
                    "key": "username",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) The password for login in clear text",
                      "type": "text/plain"
                    },
                    "key": "password",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "description": {
                      "content": "calls per hour allowed by the user",
                      "type": "text/plain"
                    },
                    "key": "X-Rate-Limit",
                    "value": "-51121627"
                  },
                  {
                    "description": {
                      "content": "date in UTC when token expires",
                      "type": "text/plain"
                    },
                    "key": "X-Expires-After",
                    "value": "minim est dolor nisi"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"minim est dolor nisi\"",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                "name": "Invalid username/password supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                }
              }
            ]
          },
          {
            "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
            "name": "Logs out current logged in user session",
            "request": {
              "name": "Logs out current logged in user session",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "logout"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "logout"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                }
              }
            ]
          },
          {
            "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
            "name": "{username}",
            "item": [
              {
                "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                "name": "Get user by user name",
                "request": {
                  "name": "Get user by user name",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "GET"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                    }
                  }
                ]
              },
              {
                "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                "name": "Updated user",
                "request": {
                  "name": "Updated user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) name that need to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                    "name": "Invalid user supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                    }
                  }
                ]
              },
              {
                "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                "name": "Delete user",
                "request": {
                  "name": "Delete user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be deleted",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "DELETE"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "059d7936-8c98-469a-ae81-1093724697e1",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "id": "baseUrl",
        "type": "string",
        "value": "https://petstore.swagger.io/v2"
      }
    ],
    "info": {
      "_postman_id": "9881baa0-9dad-4ad2-a00d-d38f7efee75e",
      "name": "Swagger Petstore",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n\nContact Support:\n Email: apiteam@swagger.io",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "c03f6d9b-6a66-40a7-9ca1-74665f820077",
    "values": []
  },
  "globals": {
    "id": "01d840ee-01e8-43c6-a137-93e7559535ac",
    "values": [
      {
        "type": "any",
        "value": "http://petstore.swagger.io/v2",
        "key": "baseUrl"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 20,
        "pending": 0,
        "failed": 20
      },
      "tests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 17,
        "pending": 0,
        "failed": 17
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1596533463507,
      "completed": 1596533468966
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16258da5-9419-4a20-8f8e-88cea7300dd0",
          "httpRequestId": "4ba47c41-d0da-49b6-b06b-b46d2bb81f03"
        },
        "item": {
          "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "74938793-2517-42b0-8940-b2150dcd2b48",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d56603db-bda8-4ba7-8218-546e8343495c",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
              }
            }
          ]
        },
        "request": {
          "name": "Update an existing pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6faafb50-5fc6-48a1-a115-144d4b4eed6c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6e02dbb2-7be8-4f2c-b637-b0e2f7a018ea",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f56856d7-1d7a-44ca-b44d-692551f82af5"
        },
        "item": {
          "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
              }
            }
          ]
        },
        "request": {
          "name": "Add a new pet to the store",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8e6716c1-8e8d-4a1c-b4d9-fdf7fe6a0b02",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 405",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 405",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "26411522-87e1-4467-89ae-d503e7b4f7fb",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73285b33-e15f-4d4a-9f9f-4ea35f84aa28"
        },
        "item": {
          "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by status",
          "description": {
            "content": "Multiple status values can be provided with comma separated strings",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByStatus"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "status",
                "value": "available"
              },
              {
                "key": "status",
                "value": "available"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6515fd51-62b6-4a91-bd1d-0cd61735c9d8",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d1a7a9cd-8f2b-484e-8ce1-41ddc1d531e4",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b8b88c6-cecf-4da1-b87c-124c90b0d79c"
        },
        "item": {
          "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by tags",
          "description": {
            "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByTags"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              },
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6e3fa98f-f30a-4774-8448-31f1ea3f988e",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "68045120-7871-4275-8294-b5abfdc67ee2",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d754c6b7-a5e6-46b7-aa4d-de89d434a375"
        },
        "item": {
          "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
              }
            }
          ]
        },
        "request": {
          "name": "Find pet by ID",
          "description": {
            "content": "Returns a single pet",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17f54e3e-5ca6-4392-8c0f-846cd7576587",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "de8e4724-4c30-4111-ad2d-8998d157611b",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbb71543-93f1-49e3-9ccd-ff021f4ed852"
        },
        "item": {
          "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
              }
            }
          ]
        },
        "request": {
          "name": "Updates a pet in the store with form data",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b62e6e28-f50c-4672-8d3a-25d770e9346d",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "description": {
                  "content": "Updated name of the pet",
                  "type": "text/plain"
                },
                "key": "name",
                "value": "<string>"
              },
              {
                "description": {
                  "content": "Updated status of the pet",
                  "type": "text/plain"
                },
                "key": "status",
                "value": "<string>"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "166a5265-21b5-434c-9168-40d486542b9f",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "477b5cc8-6946-438c-9670-38d4960c4a67"
        },
        "item": {
          "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
              }
            }
          ]
        },
        "request": {
          "name": "Deletes a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": "<string>"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "78c525b8-9384-46af-b49f-8cebdce659d6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a59c9add-596f-42fb-a8e4-8f60039d0934",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f68b4a0-7b2d-4418-8b94-a74a51b74d0f"
        },
        "item": {
          "id": "b2413407-895e-4021-828c-e110f88d8d3a",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
              }
            }
          ]
        },
        "request": {
          "name": "uploads an image",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E",
              "uploadImage"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "multipart/form-data"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "7a7a732d-eaa3-401d-91cd-019f08f658fb",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "description": {
                  "content": "Additional data to pass to server",
                  "type": "text/plain"
                },
                "key": "additionalMetadata",
                "value": "<string>",
                "type": "text"
              },
              {
                "description": {
                  "content": "file to upload",
                  "type": "text/plain"
                },
                "key": "file",
                "value": "<binary>",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "b2413407-895e-4021-828c-e110f88d8d3a",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1e7b705d-b036-4720-b037-395d1ee3e3ce",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ae24ac5-b667-4496-8cd0-5d5b069b6216"
        },
        "item": {
          "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"culpa tempor occaecat\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
              }
            }
          ]
        },
        "request": {
          "name": "Returns pet inventories by status",
          "description": {
            "content": "Returns a map of status codes to quantities",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "inventory"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9c9f30ca-a34e-4ba2-811b-4232695c6b4f",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "4813f261-4c9b-406c-b8cf-8604f5423725",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1547d68-f58f-480e-8144-67456fc8b1d8"
        },
        "item": {
          "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
              }
            }
          ]
        },
        "request": {
          "name": "Place an order for a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "644acc5b-0119-419c-873c-6df8e124d02c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
          }
        },
        "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "507bd41a-3bb8-4424-b2de-8842c1666c91",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "00627d86-c27b-4d5b-a585-c9e0985873d1"
        },
        "item": {
          "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
              }
            }
          ]
        },
        "request": {
          "name": "Find purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4ddd034a-bdf6-4f18-bb82-137648a49e8e",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0390b0da-3283-4f5f-ae64-dcc2853b0c69",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a1362cc-3b9e-4e3e-bb66-a55a53f9b12c"
        },
        "item": {
          "id": "e837617d-3a03-4408-9018-a37c69c35e28",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "503f4cb5-9668-44fc-853f-e637536a962d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
              }
            }
          ]
        },
        "request": {
          "name": "Delete purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cc67f050-03ad-4ace-be4e-4e389687293b",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "e837617d-3a03-4408-9018-a37c69c35e28",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "7fa5118a-f13a-4ad0-954f-3295ebce0873",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "edc64e28-65dc-43c7-a1c5-d4981f09e6f9"
        },
        "item": {
          "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
              }
            }
          ]
        },
        "request": {
          "name": "Create user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b6e4d253-c060-40c6-9e5c-d591275902e9",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "c6ecc709-e274-4633-bb14-50c38502b8d5",
              "timestamp": 1596533467300,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1824d8db-055c-44c9-bc39-2c0a417de09a",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6bb186c7-4dc7-4275-b6f6-5e7e47765cd3"
        },
        "item": {
          "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f0e29816-a655-446b-9de3-8347547298a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithArray"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3a42511c-9adf-4534-af98-c17c060fece5",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "10cabdf2-e800-4286-8cd7-ef78de1dc749",
              "timestamp": 1596533467538,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc3ebfd2-ae0f-4c99-a3eb-8171529998eb",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2b8d2fcf-2e75-4901-8e65-46925cafe43c"
        },
        "item": {
          "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithList"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0a2d4974-abb8-4087-a602-21c60bf9b41f",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "3d101121-57a3-4563-8822-a37edc857ef0",
              "timestamp": 1596533467774,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "fb05bd32-a537-4dd2-932f-fd22c1a556b0",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "289e7e04-56cf-4399-9d1d-45ba6921c847"
        },
        "item": {
          "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-51121627"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "minim est dolor nisi"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"minim est dolor nisi\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
              }
            }
          ]
        },
        "request": {
          "name": "Logs user into the system",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "login"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "username",
                "value": "%3Cstring%3E"
              },
              {
                "key": "password",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8e75342d-8433-46bb-b136-ccc6c9563e3a",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "20cbe279-8b3b-432d-ab5e-40d605750624",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f44f3826-42a6-4741-84fe-ee4ca4a944f4"
        },
        "item": {
          "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
              }
            }
          ]
        },
        "request": {
          "name": "Logs out current logged in user session",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "logout"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1c658321-cb98-4cfb-839d-53ba1a201e94",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "30c3eff1-3e82-43e9-ac43-f157ea42fac9",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7224df9b-fb13-4d97-98e7-06d17912fb2d"
        },
        "item": {
          "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
              }
            }
          ]
        },
        "request": {
          "name": "Get user by user name",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4e29b6d0-90f7-4d8b-8487-328e13297858",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "38e4fee9-8ff8-4344-8d23-dd5b55b013ed",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81180cb9-c228-4c2c-808b-476198f7b69d"
        },
        "item": {
          "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
              }
            }
          ]
        },
        "request": {
          "name": "Updated user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "15826737-9251-46c2-b36d-3d98017f8f70",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "297d7526-7cf1-4a13-b1b1-85f64d3349a0",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46bd0e66-45d4-4984-bff6-907251350a18"
        },
        "item": {
          "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "059d7936-8c98-469a-ae81-1093724697e1",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
              }
            }
          ]
        },
        "request": {
          "name": "Delete user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0d166f69-d090-42ec-b515-4f6a5f5f2108",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "f87b4ba5-2f06-4c6a-bdcd-7365c837fe06",
          "timestamp": 1596533463997,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "74938793-2517-42b0-8940-b2150dcd2b48",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d56603db-bda8-4ba7-8218-546e8343495c",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16258da5-9419-4a20-8f8e-88cea7300dd0",
          "httpRequestId": "4ba47c41-d0da-49b6-b06b-b46d2bb81f03"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "85ff1c86bc688d3966ec6090a7b0d321",
          "id": "8589af49-bb6c-4f2e-80c2-27d65e2178a3",
          "timestamp": 1596533464022,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "74938793-2517-42b0-8940-b2150dcd2b48",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d56603db-bda8-4ba7-8218-546e8343495c",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "16258da5-9419-4a20-8f8e-88cea7300dd0",
          "httpRequestId": "4ba47c41-d0da-49b6-b06b-b46d2bb81f03",
          "scriptId": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
          "execution": "fda04451-9591-4f23-bad7-8e40505628f9"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "a498fb83-ed9e-4c64-9237-ed78566a3638",
          "timestamp": 1596533464527,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6e02dbb2-7be8-4f2c-b637-b0e2f7a018ea",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f56856d7-1d7a-44ca-b44d-692551f82af5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 405",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "497539ef15e2cb4b88e23d6ee7bd4863",
          "id": "50b6b2b9-9305-4118-9d24-ad044a930c74",
          "timestamp": 1596533464534,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6e02dbb2-7be8-4f2c-b637-b0e2f7a018ea",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f56856d7-1d7a-44ca-b44d-692551f82af5",
          "scriptId": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
          "execution": "33b29a44-9776-4d47-9dd9-134c195b44ca"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "d2bfd0bf-62d6-4c81-be47-f75202aaaf6f",
          "timestamp": 1596533464865,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "26411522-87e1-4467-89ae-d503e7b4f7fb",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73285b33-e15f-4d4a-9f9f-4ea35f84aa28"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9de577dff71de30db258f6e6486cf387",
          "id": "2b3ff6cd-fa5c-44fa-b506-ff8b731b3c3d",
          "timestamp": 1596533464871,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "26411522-87e1-4467-89ae-d503e7b4f7fb",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "73285b33-e15f-4d4a-9f9f-4ea35f84aa28",
          "scriptId": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
          "execution": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "785f0bdd-8cee-4742-bf34-9d168785c935",
          "timestamp": 1596533465107,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d1a7a9cd-8f2b-484e-8ce1-41ddc1d531e4",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b8b88c6-cecf-4da1-b87c-124c90b0d79c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "a4f60c640f07b02d0fd2d60a737d3a01",
          "id": "15de6cea-eb52-4be9-ac4e-04bdf5eaea85",
          "timestamp": 1596533465115,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
              }
            }
          ]
        },
        "parent": {
          "id": "1162fde2-9ac8-4b06-a85f-761b90cb3116",
          "name": "pet",
          "item": [
            {
              "id": "618653c0-252c-4212-b37b-7adcb4f6da43",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "74938793-2517-42b0-8940-b2150dcd2b48",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24d4a0bb-402a-414f-8584-0f157b43479e",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d56603db-bda8-4ba7-8218-546e8343495c",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7552c742-85a1-4e8f-80da-339fa82f0c6d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "fda04451-9591-4f23-bad7-8e40505628f9"
                  }
                }
              ]
            },
            {
              "id": "b17ea667-3487-41c5-83be-26b1fddf9140",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "54df9661-c4a6-4a7a-ae0e-c408b7151fc5",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e4e7a722-f2e2-4c95-a27a-0279842570e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "33b29a44-9776-4d47-9dd9-134c195b44ca"
                  }
                }
              ]
            },
            {
              "id": "fa03c37a-d6d8-497e-8f56-9c480cf5239e",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f1ab8386-643c-42e0-84a9-062ef1e3acbe",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "994c5dc4-d4f1-4c90-97b9-c2bedd5fb21c",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0fe780c5-24f5-4d33-a4a2-68cd88e8c154",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b53ea77b-3a6d-4fbc-980f-64cd2ead97f8"
                  }
                }
              ]
            },
            {
              "id": "e7836a34-2cd4-4df6-92be-a6728b0bbdad",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "84f6c64b-e958-4b56-bbc7-c80b7b2f3682",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "3ba8a612-89e7-4f4e-a16b-90f6691a13de",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "68ca3993-a8f9-4b01-a535-bb0347845294",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "190fa1c7-6dd4-4f44-a950-3e386def719f"
                  }
                }
              ]
            },
            {
              "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                      }
                    }
                  ]
                },
                {
                  "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                      }
                    }
                  ]
                },
                {
                  "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                      }
                    }
                  ]
                },
                {
                  "id": "b2413407-895e-4021-828c-e110f88d8d3a",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d1a7a9cd-8f2b-484e-8ce1-41ddc1d531e4",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b8b88c6-cecf-4da1-b87c-124c90b0d79c",
          "scriptId": "68ca3993-a8f9-4b01-a535-bb0347845294",
          "execution": "190fa1c7-6dd4-4f44-a950-3e386def719f"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "68c117fa-04a9-4359-bd83-d0b58b135579",
          "timestamp": 1596533465353,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "68045120-7871-4275-8294-b5abfdc67ee2",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d754c6b7-a5e6-46b7-aa4d-de89d434a375"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "973a8a624d47a6ce4f2d284508a75218",
          "id": "9845a828-f4ad-468f-a1c0-ddf33cc04e8c",
          "timestamp": 1596533465360,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "68045120-7871-4275-8294-b5abfdc67ee2",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d754c6b7-a5e6-46b7-aa4d-de89d434a375",
          "scriptId": "2878492c-9b41-46eb-acb3-de635c47b656",
          "execution": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "77f4380b-a738-42eb-8e26-91211d36625e",
          "timestamp": 1596533465596,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "de8e4724-4c30-4111-ad2d-8998d157611b",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbb71543-93f1-49e3-9ccd-ff021f4ed852"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "e80ed07240705f473c39b64429fff707",
          "id": "c1771123-85b6-4321-8ddc-de68f8e64adc",
          "timestamp": 1596533465602,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "de8e4724-4c30-4111-ad2d-8998d157611b",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cbb71543-93f1-49e3-9ccd-ff021f4ed852",
          "scriptId": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
          "execution": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "f11199b1-4d72-4f6b-ba8a-bb2c30279c13",
          "timestamp": 1596533465832,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "166a5265-21b5-434c-9168-40d486542b9f",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "477b5cc8-6946-438c-9670-38d4960c4a67"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "0c034fabbdfc9ea060501c07e1911380",
          "id": "4ffccefb-e3b1-4ccc-a975-78e849708d6a",
          "timestamp": 1596533465838,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "166a5265-21b5-434c-9168-40d486542b9f",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "477b5cc8-6946-438c-9670-38d4960c4a67",
          "scriptId": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
          "execution": "997b6e02-73c8-4284-aee0-e14af567b84e"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e7d2b57e-2104-438f-a801-273a65ba7997",
          "timestamp": 1596533466074,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b2413407-895e-4021-828c-e110f88d8d3a",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a59c9add-596f-42fb-a8e4-8f60039d0934",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f68b4a0-7b2d-4418-8b94-a74a51b74d0f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d959e0276ee3bc5ad25a0c9642e0d785",
          "id": "0cc39035-86e9-496e-944a-d7e1590f5a8c",
          "timestamp": 1596533466081,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b2413407-895e-4021-828c-e110f88d8d3a",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
              }
            }
          ]
        },
        "parent": {
          "id": "2394311b-2271-4fa4-a62e-786efa9d4922",
          "name": "{pet Id}",
          "item": [
            {
              "id": "42a06c6c-0d99-4511-9046-6d5f62260594",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "06f4f2af-e7b9-45df-b955-3fa82c94e705",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "bef30387-10e1-4024-9f9f-8c9c057020cd",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1af49d87-d089-4f8b-bc42-59fbb17cbc1b",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2878492c-9b41-46eb-acb3-de635c47b656",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "006fc5fe-7177-4204-bc74-ed6bbb11f9c1"
                  }
                }
              ]
            },
            {
              "id": "84729fd7-039b-4f0f-b48e-dcd344c1dd28",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1dbd1d3d-a7da-4ac2-95a4-1cbc6a6c3d4d",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7319642d-e1ab-42d8-8fdf-5ae67df64958",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "20134bb8-19eb-4a2f-a21b-08995f72d9a1"
                  }
                }
              ]
            },
            {
              "id": "229d4c38-caf9-49d1-8ebd-340f431f83c4",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b5335e28-b6e2-4730-b102-193adf484b3f",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "654acb76-ed09-4541-83ff-5a5072c52eb3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9544cd92-aea5-47fd-9f9c-7fb7089ce52d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "997b6e02-73c8-4284-aee0-e14af567b84e"
                  }
                }
              ]
            },
            {
              "id": "b2413407-895e-4021-828c-e110f88d8d3a",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "a1e799c9-349a-455a-94de-95d9d28ab146",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -56623591,\n \"type\": \"nostrud\",\n \"message\": \"minim deserunt tempor anim\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2cace97b-3da4-4089-8c86-46b6d54f4342",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a59c9add-596f-42fb-a8e4-8f60039d0934",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f68b4a0-7b2d-4418-8b94-a74a51b74d0f",
          "scriptId": "2cace97b-3da4-4089-8c86-46b6d54f4342",
          "execution": "6ae37cba-0acf-44df-8c9a-2f8a8ad869b2"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "2b58f83f-0eb5-444f-a3af-922ec99358a9",
          "timestamp": 1596533466305,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"culpa tempor occaecat\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
              }
            }
          ]
        },
        "parent": {
          "id": "d2f04c50-38f7-42ee-be8f-fbcbccb48d23",
          "name": "store",
          "item": [
            {
              "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"culpa tempor occaecat\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
                  }
                }
              ]
            },
            {
              "id": "1df0f01c-eb87-4aac-9236-30ffdd39da2e",
              "name": "order",
              "item": [
                {
                  "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
                      }
                    }
                  ]
                },
                {
                  "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                          }
                        }
                      ]
                    },
                    {
                      "id": "e837617d-3a03-4408-9018-a37c69c35e28",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1e7b705d-b036-4720-b037-395d1ee3e3ce",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ae24ac5-b667-4496-8cd0-5d5b069b6216"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "0d1e1602368a011911e90768e4192adc",
          "id": "fc268b2e-111a-414e-ba48-a24eaaf5ca69",
          "timestamp": 1596533466314,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"culpa tempor occaecat\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
              }
            }
          ]
        },
        "parent": {
          "id": "d2f04c50-38f7-42ee-be8f-fbcbccb48d23",
          "name": "store",
          "item": [
            {
              "id": "ba3d610e-40be-4a23-ae5b-b254316b8008",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "28dafbec-5dfd-4ea7-b299-c8748e6fbfa2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"culpa tempor occaecat\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5effd661-5d6c-4eb4-a611-195457e34724",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
                  }
                }
              ]
            },
            {
              "id": "1df0f01c-eb87-4aac-9236-30ffdd39da2e",
              "name": "order",
              "item": [
                {
                  "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
                      }
                    }
                  ]
                },
                {
                  "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                          }
                        }
                      ]
                    },
                    {
                      "id": "e837617d-3a03-4408-9018-a37c69c35e28",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1e7b705d-b036-4720-b037-395d1ee3e3ce",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5ae24ac5-b667-4496-8cd0-5d5b069b6216",
          "scriptId": "5effd661-5d6c-4eb4-a611-195457e34724",
          "execution": "2ab957bd-83d3-4f9d-81f4-8728fdd50074"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "1b840dfb-92ce-41f7-88ad-0ca8ad574bd1",
          "timestamp": 1596533466565,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
              }
            }
          ]
        },
        "parent": {
          "id": "1df0f01c-eb87-4aac-9236-30ffdd39da2e",
          "name": "order",
          "item": [
            {
              "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
                  }
                }
              ]
            },
            {
              "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
              "name": "{order Id}",
              "item": [
                {
                  "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                      }
                    }
                  ]
                },
                {
                  "id": "e837617d-3a03-4408-9018-a37c69c35e28",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4813f261-4c9b-406c-b8cf-8604f5423725",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1547d68-f58f-480e-8144-67456fc8b1d8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "664ae328d7ced97074a641d349fcd479",
          "id": "8c062142-cc25-4fc4-95c2-10df5f4b0103",
          "timestamp": 1596533466573,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
              }
            }
          ]
        },
        "parent": {
          "id": "1df0f01c-eb87-4aac-9236-30ffdd39da2e",
          "name": "order",
          "item": [
            {
              "id": "6bc1134e-9373-46f9-b0b2-63cf0a0edf8f",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5d5e428f-44a9-4870-b619-1afba2b525bb",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b0d8ce8e-dd38-4ae3-9a57-3af80d9dbb4d",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ed37758-94b4-4fac-af6c-06972647fc2a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
                  }
                }
              ]
            },
            {
              "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
              "name": "{order Id}",
              "item": [
                {
                  "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                      }
                    }
                  ]
                },
                {
                  "id": "e837617d-3a03-4408-9018-a37c69c35e28",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "4813f261-4c9b-406c-b8cf-8604f5423725",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c1547d68-f58f-480e-8144-67456fc8b1d8",
          "scriptId": "3ed37758-94b4-4fac-af6c-06972647fc2a",
          "execution": "2fce99eb-ed8c-446b-a874-22a6bd6cf9a5"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "db2b1e8e-cfcd-4ee1-8b91-4c2d3fff3f1a",
          "timestamp": 1596533466799,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
              }
            }
          ]
        },
        "parent": {
          "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
          "name": "{order Id}",
          "item": [
            {
              "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                  }
                }
              ]
            },
            {
              "id": "e837617d-3a03-4408-9018-a37c69c35e28",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "507bd41a-3bb8-4424-b2de-8842c1666c91",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "00627d86-c27b-4d5b-a585-c9e0985873d1"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "98f097503fe3f2041833585404f05c45",
          "id": "2a126a0e-9de8-4e70-bdc1-77ec74987a39",
          "timestamp": 1596533466805,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
              }
            }
          ]
        },
        "parent": {
          "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
          "name": "{order Id}",
          "item": [
            {
              "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                  }
                }
              ]
            },
            {
              "id": "e837617d-3a03-4408-9018-a37c69c35e28",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "507bd41a-3bb8-4424-b2de-8842c1666c91",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "00627d86-c27b-4d5b-a585-c9e0985873d1",
          "scriptId": "3a805bd5-7d49-4afd-998c-e70cb446892b",
          "execution": "66f674be-df04-43c0-adc1-9328a12c3011"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "7f025db4-ba91-469f-a81d-590a86c61a9b",
          "timestamp": 1596533467039,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e837617d-3a03-4408-9018-a37c69c35e28",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "503f4cb5-9668-44fc-853f-e637536a962d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
              }
            }
          ]
        },
        "parent": {
          "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
          "name": "{order Id}",
          "item": [
            {
              "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                  }
                }
              ]
            },
            {
              "id": "e837617d-3a03-4408-9018-a37c69c35e28",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0390b0da-3283-4f5f-ae64-dcc2853b0c69",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a1362cc-3b9e-4e3e-bb66-a55a53f9b12c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "bb0d64c1b1a9f4ee431c9efc2e03cfb1",
          "id": "732691e8-84c7-44b2-9a0a-1df53d67b18e",
          "timestamp": 1596533467046,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e837617d-3a03-4408-9018-a37c69c35e28",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "503f4cb5-9668-44fc-853f-e637536a962d",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
              }
            }
          ]
        },
        "parent": {
          "id": "a69d3647-3d98-43b3-91c7-dc4de66e939e",
          "name": "{order Id}",
          "item": [
            {
              "id": "e7834158-95ce-4dbd-b66d-72de58037a5d",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b3abe21e-9eb2-43b9-98f2-973435de4b62",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7c6c4ac0-9262-4ef1-88d4-a923aea71a5d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "eb9d1933-ac71-4aec-be48-f49ac5647ac1",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3a805bd5-7d49-4afd-998c-e70cb446892b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "66f674be-df04-43c0-adc1-9328a12c3011"
                  }
                }
              ]
            },
            {
              "id": "e837617d-3a03-4408-9018-a37c69c35e28",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "503f4cb5-9668-44fc-853f-e637536a962d",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e032f9f0-b4af-430b-bf41-8d9f5d1b801b",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "59767c2a-92b0-4294-a65a-150c8ea661ba",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "033782b3-c6ef-4907-b001-5749728d6e26"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0390b0da-3283-4f5f-ae64-dcc2853b0c69",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a1362cc-3b9e-4e3e-bb66-a55a53f9b12c",
          "scriptId": "59767c2a-92b0-4294-a65a-150c8ea661ba",
          "execution": "033782b3-c6ef-4907-b001-5749728d6e26"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "1a181d64-9c4f-4e37-af9e-769570ac6c51",
          "timestamp": 1596533467293,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7fa5118a-f13a-4ad0-954f-3295ebce0873",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "edc64e28-65dc-43c7-a1c5-d4981f09e6f9"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "c6ecc709-e274-4633-bb14-50c38502b8d5",
          "timestamp": 1596533467300,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "7fa5118a-f13a-4ad0-954f-3295ebce0873",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "edc64e28-65dc-43c7-a1c5-d4981f09e6f9",
          "scriptId": "492de645-d782-4ee7-815c-b3ec53e9b33b"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e70d7ed1-59b8-4588-9cb2-ea450fb36a2f",
          "timestamp": 1596533467531,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f0e29816-a655-446b-9de3-8347547298a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1824d8db-055c-44c9-bc39-2c0a417de09a",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6bb186c7-4dc7-4275-b6f6-5e7e47765cd3"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "10cabdf2-e800-4286-8cd7-ef78de1dc749",
          "timestamp": 1596533467538,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f0e29816-a655-446b-9de3-8347547298a1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1824d8db-055c-44c9-bc39-2c0a417de09a",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6bb186c7-4dc7-4275-b6f6-5e7e47765cd3",
          "scriptId": "f0e29816-a655-446b-9de3-8347547298a1"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e59e9025-d68d-4d8c-b6b3-1764b2e7a8e5",
          "timestamp": 1596533467766,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cc3ebfd2-ae0f-4c99-a3eb-8171529998eb",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2b8d2fcf-2e75-4901-8e65-46925cafe43c"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "3d101121-57a3-4563-8822-a37edc857ef0",
          "timestamp": 1596533467774,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cc3ebfd2-ae0f-4c99-a3eb-8171529998eb",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2b8d2fcf-2e75-4901-8e65-46925cafe43c",
          "scriptId": "9c35ee09-b9cf-4189-97d6-45e08d39286f"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "86bbfcda-c45d-4499-bcfd-c0c936fa9cac",
          "timestamp": 1596533468008,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-51121627"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "minim est dolor nisi"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"minim est dolor nisi\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fb05bd32-a537-4dd2-932f-fd22c1a556b0",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "289e7e04-56cf-4399-9d1d-45ba6921c847"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "de4d3c9272aa76cb3163a01dcfbfdc74",
          "id": "934a207a-9ad5-4f59-94a5-a82e8a3758cf",
          "timestamp": 1596533468013,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-51121627"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "minim est dolor nisi"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"minim est dolor nisi\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fb05bd32-a537-4dd2-932f-fd22c1a556b0",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "289e7e04-56cf-4399-9d1d-45ba6921c847",
          "scriptId": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
          "execution": "88381347-5655-461e-be0a-ad07c3c92220"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "a0d83721-a58b-41f1-acba-6241e0ccf836",
          "timestamp": 1596533468244,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20cbe279-8b3b-432d-ab5e-40d605750624",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f44f3826-42a6-4741-84fe-ee4ca4a944f4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "3af519a5eae343afff1a10dcda1222cf",
          "id": "cf35edcf-be87-4386-a69d-8dcdd8d787db",
          "timestamp": 1596533468250,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
              }
            }
          ]
        },
        "parent": {
          "id": "07cbf3e0-9fad-4e94-a52a-f2873545ffc0",
          "name": "user",
          "item": [
            {
              "id": "36d85450-97fa-4baf-83f0-01b6bf69b709",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2428c45d-376f-4cf5-8355-f7311bddd794",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "492de645-d782-4ee7-815c-b3ec53e9b33b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "3ee40dec-a698-4a9e-82dd-ab5820be2a60"
                  }
                }
              ]
            },
            {
              "id": "057d0e98-eaf7-4119-ab96-bb5ed250fb10",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "03f54376-fc02-49e1-aa35-865f89289b1c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f0e29816-a655-446b-9de3-8347547298a1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "af332fb1-ed20-4773-a667-1f74a59b7bd3"
                  }
                }
              ]
            },
            {
              "id": "e883ff44-c033-4e00-b5ef-66d98201208f",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "83363cfa-0ad8-4a2f-8a41-099b6199227d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c35ee09-b9cf-4189-97d6-45e08d39286f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "8b246b41-1a15-460c-89af-7e8c9d9f415a"
                  }
                }
              ]
            },
            {
              "id": "cd28df46-dc5d-4063-95f1-8a574e9d91c1",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "8ad818bb-a205-4d43-9b1d-ddb3ec27df17",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-51121627"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "minim est dolor nisi"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"minim est dolor nisi\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30e9fad0-1854-4786-8dbc-14d21497d488",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4ca8bc38-6e3a-45f6-a9fd-92e4d7de707f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "88381347-5655-461e-be0a-ad07c3c92220"
                  }
                }
              ]
            },
            {
              "id": "34596dbc-cb1c-47a0-9d6b-0ecdb3ef1a3d",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7179139e-06aa-4911-9756-24978c3fa3ff",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
                  }
                }
              ]
            },
            {
              "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
              "name": "{username}",
              "item": [
                {
                  "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                      }
                    }
                  ]
                },
                {
                  "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                      }
                    }
                  ]
                },
                {
                  "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "059d7936-8c98-469a-ae81-1093724697e1",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "20cbe279-8b3b-432d-ab5e-40d605750624",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f44f3826-42a6-4741-84fe-ee4ca4a944f4",
          "scriptId": "37f8f7dc-cf37-4cc9-b526-5bb9aaaef41c",
          "execution": "9d474ba4-a4b8-4a47-9ddb-d36ae4a26f4b"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "30f5857f-fc1f-44cb-a6ed-345364625f5f",
          "timestamp": 1596533468482,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "30c3eff1-3e82-43e9-ac43-f157ea42fac9",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7224df9b-fb13-4d97-98e7-06d17912fb2d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "445013cff5fe7d306a2143c8cdc4fe24",
          "id": "bde67cf1-fc06-41c7-b5ab-4be75a419d4f",
          "timestamp": 1596533468489,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "30c3eff1-3e82-43e9-ac43-f157ea42fac9",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "7224df9b-fb13-4d97-98e7-06d17912fb2d",
          "scriptId": "fb53b001-4784-4b15-9c0a-ae95105068d2",
          "execution": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "1b449f66-5220-4815-8585-fc39a90a4d05",
          "timestamp": 1596533468720,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "38e4fee9-8ff8-4344-8d23-dd5b55b013ed",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81180cb9-c228-4c2c-808b-476198f7b69d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "2ab8416ff7f1e8fcf2db537a453e6c30",
          "id": "e9b91ad8-ad17-4196-b44a-e1d0b5a69238",
          "timestamp": 1596533468726,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "38e4fee9-8ff8-4344-8d23-dd5b55b013ed",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "81180cb9-c228-4c2c-808b-476198f7b69d",
          "scriptId": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
          "execution": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "0b9a2d45-6148-4098-9757-af30fe7020aa",
          "timestamp": 1596533468954,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "059d7936-8c98-469a-ae81-1093724697e1",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "297d7526-7cf1-4a13-b1b1-85f64d3349a0",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46bd0e66-45d4-4984-bff6-907251350a18"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "84c31d8731ca94e279c57f674f5eaa0e",
          "id": "1be49acf-a336-4cf2-8bd4-b6ecc8db1afd",
          "timestamp": 1596533468960,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "059d7936-8c98-469a-ae81-1093724697e1",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
              }
            }
          ]
        },
        "parent": {
          "id": "dd1e1638-9058-4d8a-bfdd-3d8649901580",
          "name": "{username}",
          "item": [
            {
              "id": "eb257bb5-e364-440d-bbda-65b8e85b9a15",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "716f4247-89f8-4860-bdf2-f87ef944d8a2",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "aba4038d-58cb-44f9-83ca-b53152abae2a",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ab39896-8fb6-4dd2-8a35-f02684374a81",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fb53b001-4784-4b15-9c0a-ae95105068d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "22e189f4-0ea2-423c-a565-78d1b4e3ea3d"
                  }
                }
              ]
            },
            {
              "id": "4601918f-dbb7-42f9-8f6e-3f783a8d5237",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e12c17a-f136-4474-811c-e7dc9209ad54",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "53cb73ff-fcb5-46c7-bbd8-db0c76aa3e02",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c1b70cab-6e18-4e1d-b5d2-02f8382017d3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4c4790bc-13bb-46e4-8ac0-5b7ec71724ab"
                  }
                }
              ]
            },
            {
              "id": "6b7451e1-58ef-4bb0-bcb3-694fa03f615c",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "059d7936-8c98-469a-ae81-1093724697e1",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e7f8b42a-8ef0-4007-acf7-55fe8a1c1c13",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "453672f6-e5dc-4506-9244-79f1c763bcb7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "297d7526-7cf1-4a13-b1b1-85f64d3349a0",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "46bd0e66-45d4-4984-bff6-907251350a18",
          "scriptId": "453672f6-e5dc-4506-9244-79f1c763bcb7",
          "execution": "4756c49e-c4d8-4e8c-ba18-bcfba81bbebd"
        }
      }
    ],
    "error": null
  }
}