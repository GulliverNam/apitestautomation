{
  "collection": {
    "_": {
      "postman_id": "8a6bcb03-f69c-4f33-a061-38e5240b4b97"
    },
    "item": [
      {
        "id": "30c17acc-5094-4970-af80-d589c60ead9d",
        "name": "pet",
        "item": [
          {
            "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
            "name": "Update an existing pet",
            "request": {
              "name": "Update an existing pet",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                "name": "Invalid ID supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                "name": "Pet not found",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                "name": "Validation exception",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                  ],
                  "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                }
              }
            ]
          },
          {
            "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
            "name": "Add a new pet to the store",
            "request": {
              "name": "Add a new pet to the store",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                "name": "Invalid input",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9809cb4b-3930-4892-9d06-527647d47626",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                  ],
                  "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                }
              }
            ]
          },
          {
            "id": "c21d687b-ce52-4376-9843-e80ba4640928",
            "name": "Finds Pets by status",
            "request": {
              "name": "Finds Pets by status",
              "description": {
                "content": "Multiple status values can be provided with comma separated strings",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByStatus"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  },
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                "name": "Invalid status value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                }
              }
            ]
          },
          {
            "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
            "name": "Finds Pets by tags",
            "request": {
              "name": "Finds Pets by tags",
              "description": {
                "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByTags"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                "name": "Invalid tag value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                }
              }
            ]
          },
          {
            "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
            "name": "{pet Id}",
            "item": [
              {
                "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                "name": "Find pet by ID",
                "request": {
                  "name": "Find pet by ID",
                  "description": {
                    "content": "Returns a single pet",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to return",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": ""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                    }
                  }
                ]
              },
              {
                "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                "name": "Updates a pet in the store with form data",
                "request": {
                  "name": "Updates a pet in the store with form data",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet that needs to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "description": {
                          "content": "Updated name of the pet",
                          "type": "text/plain"
                        },
                        "key": "name",
                        "value": "<string>"
                      },
                      {
                        "description": {
                          "content": "Updated status of the pet",
                          "type": "text/plain"
                        },
                        "key": "status",
                        "value": "<string>"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                    "name": "Invalid input",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "urlencoded",
                        "urlencoded": [
                          {
                            "description": {
                              "content": "Updated name of the pet",
                              "type": "text/plain"
                            },
                            "key": "name",
                            "value": "<string>"
                          },
                          {
                            "description": {
                              "content": "Updated status of the pet",
                              "type": "text/plain"
                            },
                            "key": "status",
                            "value": "<string>"
                          }
                        ]
                      }
                    },
                    "status": "Method Not Allowed",
                    "code": 405,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                    }
                  }
                ]
              },
              {
                "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                "name": "Deletes a pet",
                "request": {
                  "name": "Deletes a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) Pet id to delete",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": "<string>"
                    }
                  ],
                  "method": "DELETE",
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                    }
                  }
                ]
              },
              {
                "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                "name": "uploads an image",
                "request": {
                  "name": "uploads an image",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId",
                      "uploadImage"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to update",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "multipart/form-data"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "description": {
                          "content": "Additional data to pass to server",
                          "type": "text/plain"
                        },
                        "key": "additionalMetadata",
                        "value": "<string>",
                        "type": "text"
                      },
                      {
                        "description": {
                          "content": "file to upload",
                          "type": "text/plain"
                        },
                        "key": "file",
                        "value": "<binary>",
                        "type": "text"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId",
                          "uploadImage"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "formdata",
                        "formdata": [
                          {
                            "description": {
                              "content": "Additional data to pass to server",
                              "type": "text/plain"
                            },
                            "key": "additionalMetadata",
                            "value": "<string>",
                            "type": "text"
                          },
                          {
                            "description": {
                              "content": "file to upload",
                              "type": "text/plain"
                            },
                            "key": "file",
                            "value": "<binary>",
                            "type": "text"
                          }
                        ]
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "5d7cf8c0-d6bc-458e-a126-492cfdacef57",
        "name": "store",
        "item": [
          {
            "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
            "name": "Returns pet inventories by status",
            "request": {
              "name": "Returns pet inventories by status",
              "description": {
                "content": "Returns a map of status codes to quantities",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "store",
                  "inventory"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "api_key",
                  "value": ""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "store",
                      "inventory"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"in sint\"",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
                }
              }
            ]
          },
          {
            "id": "19296fd1-38c4-4247-a46b-4df89c34be6b",
            "name": "order",
            "item": [
              {
                "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
                "name": "Place an order for a pet",
                "request": {
                  "name": "Place an order for a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "store",
                      "order"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "1f301d81-3682-4929-bf90-d32d7006442d",
                    "name": "Invalid Order",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
                    }
                  }
                ]
              },
              {
                "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
                "name": "{order Id}",
                "item": [
                  {
                    "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
                    "name": "Find purchase order by ID",
                    "request": {
                      "name": "Find purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of pet that needs to be fetched",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "GET"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "json"
                        },
                        "id": "f506679c-057d-4c66-beea-597d3c89671e",
                        "name": "successful operation",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "OK",
                        "code": 200,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
                    "name": "Delete purchase order by ID",
                    "request": {
                      "name": "Delete purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of the order that needs to be deleted",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "DELETE"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "586551a7-06b8-441c-b075-f77056177da3",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
        "name": "user",
        "item": [
          {
            "id": "26ab443a-4197-4406-aeb6-ff8833200928",
            "name": "Create user",
            "request": {
              "name": "Create user",
              "description": {
                "content": "This can only be done by the logged in user.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                }
              }
            ]
          },
          {
            "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithArray"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithArray"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                }
              }
            ]
          },
          {
            "id": "e47330b0-5b01-40df-be10-8711c009bab1",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithList"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithList"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                }
              }
            ]
          },
          {
            "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
            "name": "Logs user into the system",
            "request": {
              "name": "Logs user into the system",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) The user name for login",
                      "type": "text/plain"
                    },
                    "key": "username",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) The password for login in clear text",
                      "type": "text/plain"
                    },
                    "key": "password",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "description": {
                      "content": "calls per hour allowed by the user",
                      "type": "text/plain"
                    },
                    "key": "X-Rate-Limit",
                    "value": "74672283"
                  },
                  {
                    "description": {
                      "content": "date in UTC when token expires",
                      "type": "text/plain"
                    },
                    "key": "X-Expires-After",
                    "value": "id proident"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"id proident\"",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                "name": "Invalid username/password supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                }
              }
            ]
          },
          {
            "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
            "name": "Logs out current logged in user session",
            "request": {
              "name": "Logs out current logged in user session",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "logout"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "logout"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                }
              }
            ]
          },
          {
            "id": "2186db1e-ba91-4c68-8656-268772723ff8",
            "name": "{username}",
            "item": [
              {
                "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                "name": "Get user by user name",
                "request": {
                  "name": "Get user by user name",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "GET"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                    }
                  }
                ]
              },
              {
                "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                "name": "Updated user",
                "request": {
                  "name": "Updated user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) name that need to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                    "name": "Invalid user supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                    }
                  }
                ]
              },
              {
                "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                "name": "Delete user",
                "request": {
                  "name": "Delete user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be deleted",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "DELETE"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "id": "baseUrl",
        "type": "string",
        "value": "https://petstore.swagger.io/v2"
      }
    ],
    "info": {
      "_postman_id": "8a6bcb03-f69c-4f33-a061-38e5240b4b97",
      "name": "Swagger Petstore",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n\nContact Support:\n Email: apiteam@swagger.io",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "f41210d0-e8fd-4ee1-b0b9-365c03851c37",
    "values": []
  },
  "globals": {
    "id": "dcee83b4-07e7-4d58-bc7a-682860c170fe",
    "values": [
      {
        "type": "any",
        "value": "http://petstore.swagger.io/v2",
        "key": "baseUrl"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 20,
        "pending": 0,
        "failed": 20
      },
      "tests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 17,
        "pending": 0,
        "failed": 17
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1596532980517,
      "completed": 1596532985967
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99072dea-f346-448c-8423-4dfb15630a58",
          "httpRequestId": "d7961b89-0702-4027-9aef-3634eba5d569"
        },
        "item": {
          "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "612b4378-1690-4e15-8ecd-a369125624e7",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
              }
            }
          ]
        },
        "request": {
          "name": "Update an existing pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "98d4bc67-5d88-4863-9072-764f801e61ee",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "53ef9b73-bc38-4751-816a-70026fb2d43c",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcb4b6b6-b10d-45a0-8b37-45958e27a562"
        },
        "item": {
          "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9809cb4b-3930-4892-9d06-527647d47626",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
              }
            }
          ]
        },
        "request": {
          "name": "Add a new pet to the store",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2520389b-0cdb-4890-ac41-d4a6739a573a",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 405",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 405",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "58e09735-c782-400f-afa0-4902806437a7",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0e5ee14-96fa-423f-8bb3-0e083c70984e"
        },
        "item": {
          "id": "c21d687b-ce52-4376-9843-e80ba4640928",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by status",
          "description": {
            "content": "Multiple status values can be provided with comma separated strings",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByStatus"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "status",
                "value": "available"
              },
              {
                "key": "status",
                "value": "available"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "534779b2-f818-4e2e-b7d6-aa4f976b14eb",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "c21d687b-ce52-4376-9843-e80ba4640928",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b3511dc1-1693-4c3d-839a-2af387a9110c",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0eb62525-7613-42ab-91f7-3814882f8f31"
        },
        "item": {
          "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by tags",
          "description": {
            "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByTags"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              },
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "229f5f3e-26b1-4f75-9780-68617ef3574c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "375536b7-01ca-432b-b4f5-9fce0c25dc7f",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02939dc7-0ef2-44da-9164-9a40374c3da3"
        },
        "item": {
          "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9154d724-4e7a-4712-bea1-9379642339d4",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
              }
            }
          ]
        },
        "request": {
          "name": "Find pet by ID",
          "description": {
            "content": "Returns a single pet",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a204a947-2cda-46f7-a7a9-e1fddc97bb22",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "1742ac10-3d65-4383-9dbd-ed487f12d0f4",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "37612e5c-2107-45fd-a962-16ceaded16c7"
        },
        "item": {
          "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
              }
            }
          ]
        },
        "request": {
          "name": "Updates a pet in the store with form data",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1b422c5d-aa63-439d-8248-9c74fe0b7f9e",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "description": {
                  "content": "Updated name of the pet",
                  "type": "text/plain"
                },
                "key": "name",
                "value": "<string>"
              },
              {
                "description": {
                  "content": "Updated status of the pet",
                  "type": "text/plain"
                },
                "key": "status",
                "value": "<string>"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3c8cebc1-e87b-4234-8fc5-3837a5de329b",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6407f7af-3e9b-4508-a984-76643bdad943"
        },
        "item": {
          "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
              }
            }
          ]
        },
        "request": {
          "name": "Deletes a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": "<string>"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3c918fe7-faf9-4ddd-b5bc-b07674c6d6b8",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "366c70b7-4778-4a29-bec4-415406d53e80",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42c8eed0-c28f-447d-8f75-a3b0f37d237a"
        },
        "item": {
          "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
              }
            }
          ]
        },
        "request": {
          "name": "uploads an image",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E",
              "uploadImage"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "multipart/form-data"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4beb57f1-896e-4b0f-bcb5-a7738d69df2f",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "description": {
                  "content": "Additional data to pass to server",
                  "type": "text/plain"
                },
                "key": "additionalMetadata",
                "value": "<string>",
                "type": "text"
              },
              {
                "description": {
                  "content": "file to upload",
                  "type": "text/plain"
                },
                "key": "file",
                "value": "<binary>",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "12fef85f-031a-486c-bc12-47f19b77d804",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1772723-c042-49b9-b2d7-71d98eaf853a"
        },
        "item": {
          "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"in sint\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
              }
            }
          ]
        },
        "request": {
          "name": "Returns pet inventories by status",
          "description": {
            "content": "Returns a map of status codes to quantities",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "inventory"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "16f241f6-dd07-428d-8fe0-d7e26279775d",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b388fa8d-185c-4fd8-9a9f-34b3dd5e3723",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "07f794fb-6a77-4dee-97bb-d39de340e61c"
        },
        "item": {
          "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1f301d81-3682-4929-bf90-d32d7006442d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
              }
            }
          ]
        },
        "request": {
          "name": "Place an order for a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "916dc9bf-e38a-4e89-923f-c3c3428b1b44",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
          }
        },
        "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8f8cf553-e071-40ed-ae31-3b35b3764acf",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fae52b78-4a2d-4464-a073-467f2d4f4bf6"
        },
        "item": {
          "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f506679c-057d-4c66-beea-597d3c89671e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
              }
            }
          ]
        },
        "request": {
          "name": "Find purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "aadbc287-7955-43db-8536-acf8f41d41cd",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "46eafb45-6e60-4dbb-9bf9-3d95fa134ed7",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "759a5f3f-3f7f-40a6-87dc-f23864513eb4"
        },
        "item": {
          "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "586551a7-06b8-441c-b075-f77056177da3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
              }
            }
          ]
        },
        "request": {
          "name": "Delete purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "de269c48-d809-4ec2-807a-8e173b595bc3",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "cac61fe0-d8f4-4d94-931d-d484c8f401e2",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1d652691-bc14-4111-ad10-1628590b1165"
        },
        "item": {
          "id": "26ab443a-4197-4406-aeb6-ff8833200928",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
              }
            }
          ]
        },
        "request": {
          "name": "Create user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c3547031-9818-4ef5-aeab-ca6e9c3c6c8b",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "26ab443a-4197-4406-aeb6-ff8833200928",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "0c5f1377-d79d-4ee8-8508-ac384ccdf63d",
              "timestamp": 1596532984316,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ed65415c-2345-47e3-b237-b4a01b17e9f8",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4ff1dfd4-dfa3-451e-bf75-aad8c75d781e"
        },
        "item": {
          "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithArray"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e35763d1-6601-4de6-b152-f71a14a80eb6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "9980ec88-dfcd-46c8-adee-b86fa71e5aed",
              "timestamp": 1596532984548,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0bb845af-015a-4609-82c7-c2db18722bb3",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39aa2e9b-46d2-4560-83c6-223376858cc4"
        },
        "item": {
          "id": "e47330b0-5b01-40df-be10-8711c009bab1",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithList"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c56ff33e-4cba-4216-9ff9-5d7789dbdb77",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "e47330b0-5b01-40df-be10-8711c009bab1",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "024ef50a-b531-4d71-abf4-d3fdb04b8716",
              "timestamp": 1596532984782,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3b60ed57-7563-47b0-93c1-2139db037ca9",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d19fe5c-b49d-4299-801b-89a168dabc35"
        },
        "item": {
          "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "74672283"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "id proident"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"id proident\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
              }
            }
          ]
        },
        "request": {
          "name": "Logs user into the system",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "login"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "username",
                "value": "%3Cstring%3E"
              },
              {
                "key": "password",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5d6cf6c0-b1be-4ed5-bb51-a2f1919e32ba",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e101d1dd-6e2d-43be-8b1b-46844ec8a271",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c2b300c-39a2-4cd3-8f1b-29780e887c63"
        },
        "item": {
          "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
              }
            }
          ]
        },
        "request": {
          "name": "Logs out current logged in user session",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "logout"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "99f87af6-52ec-404a-a336-d3054733d1c6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5bd9c4ad-7d0d-4327-bf44-0a1d97708356",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b456635f-a65f-4483-9655-6fef89af86a3"
        },
        "item": {
          "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
              }
            }
          ]
        },
        "request": {
          "name": "Get user by user name",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "17413fb2-398e-42dd-bb36-10255fff31d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "45954b76-2d1f-4337-97af-6a0131219b40",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0bb12629-7d04-4602-a981-2bdb36c07c97"
        },
        "item": {
          "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
              }
            }
          ]
        },
        "request": {
          "name": "Updated user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2447cbfc-ea3d-455f-80a1-1b3b94db4217",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a68a03c4-4fb5-4ae9-b7bf-71c8a901bb0e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6724e729-21be-40f3-a729-0c7358caf0d4"
        },
        "item": {
          "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
              }
            }
          ]
        },
        "request": {
          "name": "Delete user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "86152297-a887-4e86-843c-d05c0834c0b7",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "d1d08123-dcc4-4df1-bbb7-fa3ad704a3a6",
          "timestamp": 1596532981010,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "612b4378-1690-4e15-8ecd-a369125624e7",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99072dea-f346-448c-8423-4dfb15630a58",
          "httpRequestId": "d7961b89-0702-4027-9aef-3634eba5d569"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "85ff1c86bc688d3966ec6090a7b0d321",
          "id": "1ca36f3f-2827-48dc-8ffb-027cbe9f1b23",
          "timestamp": 1596532981040,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "612b4378-1690-4e15-8ecd-a369125624e7",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99072dea-f346-448c-8423-4dfb15630a58",
          "httpRequestId": "d7961b89-0702-4027-9aef-3634eba5d569",
          "scriptId": "ee051d6f-74a0-457c-ae53-b32a5783d473",
          "execution": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "69f66170-7dbb-4262-b6f0-f49b0ca41c4d",
          "timestamp": 1596532981513,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9809cb4b-3930-4892-9d06-527647d47626",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "53ef9b73-bc38-4751-816a-70026fb2d43c",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcb4b6b6-b10d-45a0-8b37-45958e27a562"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 405",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "497539ef15e2cb4b88e23d6ee7bd4863",
          "id": "5575ef00-3f7f-424c-a431-6cb1fc29065f",
          "timestamp": 1596532981520,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9809cb4b-3930-4892-9d06-527647d47626",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "53ef9b73-bc38-4751-816a-70026fb2d43c",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "bcb4b6b6-b10d-45a0-8b37-45958e27a562",
          "scriptId": "9809cb4b-3930-4892-9d06-527647d47626",
          "execution": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "8097a55b-8c9e-4952-867a-b55cd297332a",
          "timestamp": 1596532981839,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c21d687b-ce52-4376-9843-e80ba4640928",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "58e09735-c782-400f-afa0-4902806437a7",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0e5ee14-96fa-423f-8bb3-0e083c70984e"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9de577dff71de30db258f6e6486cf387",
          "id": "4b5c5e2b-a337-42e1-9d3f-db4676ad388a",
          "timestamp": 1596532981848,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c21d687b-ce52-4376-9843-e80ba4640928",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "58e09735-c782-400f-afa0-4902806437a7",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e0e5ee14-96fa-423f-8bb3-0e083c70984e",
          "scriptId": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
          "execution": "4c7de160-6121-4c2c-8956-733aeae9a772"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "60214e2f-a684-4557-be90-72a1e8a652a2",
          "timestamp": 1596532982085,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3511dc1-1693-4c3d-839a-2af387a9110c",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0eb62525-7613-42ab-91f7-3814882f8f31"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "a4f60c640f07b02d0fd2d60a737d3a01",
          "id": "b5453baf-bfe0-43cc-9f08-46cab5916874",
          "timestamp": 1596532982093,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
              }
            }
          ]
        },
        "parent": {
          "id": "30c17acc-5094-4970-af80-d589c60ead9d",
          "name": "pet",
          "item": [
            {
              "id": "e864d636-8575-4179-bc45-bdbb597fbae3",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "22be1467-f662-4cd9-b188-33bf25e0afae",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "612b4378-1690-4e15-8ecd-a369125624e7",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ba2b1aa-f882-457a-8903-99f23098da5e",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee051d6f-74a0-457c-ae53-b32a5783d473",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9e5a63c6-02ef-45be-8c0c-8496ca8219c4"
                  }
                }
              ]
            },
            {
              "id": "80bbc78a-290f-4ec0-b237-50c0b3b8bbd9",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2bcb9c52-8353-4f51-bc1c-1043e5b83939",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9809cb4b-3930-4892-9d06-527647d47626",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "3b797aaa-7173-437f-81cc-ba61e7b6d0ff"
                  }
                }
              ]
            },
            {
              "id": "c21d687b-ce52-4376-9843-e80ba4640928",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1e7505fe-622f-44eb-91ea-ed192018d24e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7befeb72-a3a7-40ec-a1dc-a04e535c5137",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4b07629b-2d96-4434-8a5f-96a54cd64e28",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4c7de160-6121-4c2c-8956-733aeae9a772"
                  }
                }
              ]
            },
            {
              "id": "cd555c5a-f2c1-4dfa-a1e2-e4d1db253a27",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "774b669b-cde8-4baa-979c-ce92f1deb9e6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c9d54507-5093-4711-a975-a2cd57ad7a17",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
                  }
                }
              ]
            },
            {
              "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                      }
                    }
                  ]
                },
                {
                  "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                      }
                    }
                  ]
                },
                {
                  "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                      }
                    }
                  ]
                },
                {
                  "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3511dc1-1693-4c3d-839a-2af387a9110c",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0eb62525-7613-42ab-91f7-3814882f8f31",
          "scriptId": "7de1ffbc-55f1-4f0c-935e-613d0a9a29ca",
          "execution": "b9feef2b-58a4-431e-825a-3d7dc94189ad"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "3c6ad646-e1de-4b8b-bf5e-9572cbf0e6a3",
          "timestamp": 1596532982353,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9154d724-4e7a-4712-bea1-9379642339d4",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "375536b7-01ca-432b-b4f5-9fce0c25dc7f",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02939dc7-0ef2-44da-9164-9a40374c3da3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "973a8a624d47a6ce4f2d284508a75218",
          "id": "151d1dc4-ec23-44ca-a1f6-88b79e9ad288",
          "timestamp": 1596532982360,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9154d724-4e7a-4712-bea1-9379642339d4",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "375536b7-01ca-432b-b4f5-9fce0c25dc7f",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "02939dc7-0ef2-44da-9164-9a40374c3da3",
          "scriptId": "69cff2cc-d898-499b-be71-c80d8324e2f0",
          "execution": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "6f3f29f0-ed4b-434b-9f7c-62b692694dc6",
          "timestamp": 1596532982599,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1742ac10-3d65-4383-9dbd-ed487f12d0f4",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "37612e5c-2107-45fd-a962-16ceaded16c7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "e80ed07240705f473c39b64429fff707",
          "id": "bdebc930-7e87-429b-8008-28232efa7f36",
          "timestamp": 1596532982604,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "1742ac10-3d65-4383-9dbd-ed487f12d0f4",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "37612e5c-2107-45fd-a962-16ceaded16c7",
          "scriptId": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
          "execution": "7157b3bc-1425-4151-b39c-182882a5a301"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "17b9a5b1-6c5c-4deb-ad9b-ef04c2993d81",
          "timestamp": 1596532982835,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c8cebc1-e87b-4234-8fc5-3837a5de329b",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6407f7af-3e9b-4508-a984-76643bdad943"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "0c034fabbdfc9ea060501c07e1911380",
          "id": "67dfd0fe-36d5-456e-9bf6-8eb9d5c74e01",
          "timestamp": 1596532982841,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3c8cebc1-e87b-4234-8fc5-3837a5de329b",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6407f7af-3e9b-4508-a984-76643bdad943",
          "scriptId": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
          "execution": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "483dfc6b-5228-4913-81ac-58468068c38f",
          "timestamp": 1596532983076,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "366c70b7-4778-4a29-bec4-415406d53e80",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42c8eed0-c28f-447d-8f75-a3b0f37d237a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d959e0276ee3bc5ad25a0c9642e0d785",
          "id": "d6f1dd5c-f416-4c67-a4a2-ba6dd080fba5",
          "timestamp": 1596532983083,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
              }
            }
          ]
        },
        "parent": {
          "id": "3ada0dd2-1f6a-4a0d-8d7b-0417916ae143",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5e40f64d-7d6a-4fa2-8b92-2fc97712bb59",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3763c540-d85e-4b8c-a2f4-5c64cf0b9f23",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "996ee4c0-085d-4ef6-87e7-b2250de5d807",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9154d724-4e7a-4712-bea1-9379642339d4",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "69cff2cc-d898-499b-be71-c80d8324e2f0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "c57cd3cd-652a-4de7-a428-8c378cf2097f"
                  }
                }
              ]
            },
            {
              "id": "716b0222-0c19-4a61-97ae-42bf98817e1d",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4990a5d2-1e7e-42d1-a6f2-45b18c3128c9",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8cb8bdbb-a77e-46bd-bf54-a1fd96eb4631",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "7157b3bc-1425-4151-b39c-182882a5a301"
                  }
                }
              ]
            },
            {
              "id": "17f780cc-7b9c-45cc-bf3e-732b6c833ba5",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0ef64962-f141-476c-b0e4-38b7e0b9b30c",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5bcf2fe7-a9ef-4230-81d6-505b76ae72f9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "157c86e0-f5aa-4aa8-9940-bce8cc0a3a80",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ae0772f1-3b6e-410b-856a-8ea7c2cdd48e"
                  }
                }
              ]
            },
            {
              "id": "592774d3-ef93-4da1-beb7-1f5352dfafc9",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ff3f1942-69ea-49f0-b7f7-ec4747355d8e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -39753201,\n \"type\": \"magna\",\n \"message\": \"Lorem\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6431fe86-9279-4e65-be76-aa127ec1203b"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "366c70b7-4778-4a29-bec4-415406d53e80",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "42c8eed0-c28f-447d-8f75-a3b0f37d237a",
          "scriptId": "791769fe-10c1-4b6b-8b3c-21d3c07ce14b",
          "execution": "6431fe86-9279-4e65-be76-aa127ec1203b"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "af7b2ad0-ca4e-4d85-a7d2-2c3aa8804698",
          "timestamp": 1596532983314,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"in sint\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
              }
            }
          ]
        },
        "parent": {
          "id": "5d7cf8c0-d6bc-458e-a126-492cfdacef57",
          "name": "store",
          "item": [
            {
              "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"in sint\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
                  }
                }
              ]
            },
            {
              "id": "19296fd1-38c4-4247-a46b-4df89c34be6b",
              "name": "order",
              "item": [
                {
                  "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1f301d81-3682-4929-bf90-d32d7006442d",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
                      }
                    }
                  ]
                },
                {
                  "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "f506679c-057d-4c66-beea-597d3c89671e",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                          }
                        }
                      ]
                    },
                    {
                      "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "586551a7-06b8-441c-b075-f77056177da3",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "12fef85f-031a-486c-bc12-47f19b77d804",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1772723-c042-49b9-b2d7-71d98eaf853a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "0d1e1602368a011911e90768e4192adc",
          "id": "14d72769-c029-4e03-82f8-e16d8654923c",
          "timestamp": 1596532983322,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"in sint\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
              }
            }
          ]
        },
        "parent": {
          "id": "5d7cf8c0-d6bc-458e-a126-492cfdacef57",
          "name": "store",
          "item": [
            {
              "id": "27a9f35f-1e1f-440a-a1fd-3c5c4c14cacb",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "892b4084-2a9e-4bac-a39a-6c89ff0542df",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"in sint\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
                  }
                }
              ]
            },
            {
              "id": "19296fd1-38c4-4247-a46b-4df89c34be6b",
              "name": "order",
              "item": [
                {
                  "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1f301d81-3682-4929-bf90-d32d7006442d",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
                      }
                    }
                  ]
                },
                {
                  "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "f506679c-057d-4c66-beea-597d3c89671e",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                          }
                        }
                      ]
                    },
                    {
                      "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "586551a7-06b8-441c-b075-f77056177da3",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "12fef85f-031a-486c-bc12-47f19b77d804",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f1772723-c042-49b9-b2d7-71d98eaf853a",
          "scriptId": "c792a7ff-06c3-4edf-96b2-53ac0a9ee4f2",
          "execution": "611db63a-0a42-4c9e-861b-dd238ccf8f19"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "f422e631-e72d-4993-a115-9840d90c3f74",
          "timestamp": 1596532983593,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1f301d81-3682-4929-bf90-d32d7006442d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
              }
            }
          ]
        },
        "parent": {
          "id": "19296fd1-38c4-4247-a46b-4df89c34be6b",
          "name": "order",
          "item": [
            {
              "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1f301d81-3682-4929-bf90-d32d7006442d",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
                  }
                }
              ]
            },
            {
              "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
              "name": "{order Id}",
              "item": [
                {
                  "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "f506679c-057d-4c66-beea-597d3c89671e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                      }
                    }
                  ]
                },
                {
                  "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "586551a7-06b8-441c-b075-f77056177da3",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b388fa8d-185c-4fd8-9a9f-34b3dd5e3723",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "07f794fb-6a77-4dee-97bb-d39de340e61c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "664ae328d7ced97074a641d349fcd479",
          "id": "229967b0-7669-475f-8c9a-e5b57090fa1d",
          "timestamp": 1596532983601,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1f301d81-3682-4929-bf90-d32d7006442d",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
              }
            }
          ]
        },
        "parent": {
          "id": "19296fd1-38c4-4247-a46b-4df89c34be6b",
          "name": "order",
          "item": [
            {
              "id": "6c7de2b7-3c2f-4d95-8ca1-cf02f13d40d4",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1a634fdf-34a1-42e1-a37a-df1300818810",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1f301d81-3682-4929-bf90-d32d7006442d",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
                  }
                }
              ]
            },
            {
              "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
              "name": "{order Id}",
              "item": [
                {
                  "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "f506679c-057d-4c66-beea-597d3c89671e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                      }
                    }
                  ]
                },
                {
                  "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "586551a7-06b8-441c-b075-f77056177da3",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b388fa8d-185c-4fd8-9a9f-34b3dd5e3723",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "07f794fb-6a77-4dee-97bb-d39de340e61c",
          "scriptId": "c51db676-c3e1-4ccd-ac3e-7fb811a81b9b",
          "execution": "eb0506b8-a182-42d7-b025-10d5b659ffcc"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "bf9ff4c1-4672-418b-a430-c12df70a75aa",
          "timestamp": 1596532983834,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f506679c-057d-4c66-beea-597d3c89671e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
              }
            }
          ]
        },
        "parent": {
          "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
          "name": "{order Id}",
          "item": [
            {
              "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f506679c-057d-4c66-beea-597d3c89671e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                  }
                }
              ]
            },
            {
              "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "586551a7-06b8-441c-b075-f77056177da3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8f8cf553-e071-40ed-ae31-3b35b3764acf",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fae52b78-4a2d-4464-a073-467f2d4f4bf6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "98f097503fe3f2041833585404f05c45",
          "id": "3358f997-0cdb-453d-b8be-6e4c8e5dbe39",
          "timestamp": 1596532983840,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f506679c-057d-4c66-beea-597d3c89671e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
              }
            }
          ]
        },
        "parent": {
          "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
          "name": "{order Id}",
          "item": [
            {
              "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f506679c-057d-4c66-beea-597d3c89671e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                  }
                }
              ]
            },
            {
              "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "586551a7-06b8-441c-b075-f77056177da3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8f8cf553-e071-40ed-ae31-3b35b3764acf",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fae52b78-4a2d-4464-a073-467f2d4f4bf6",
          "scriptId": "786ad57c-8ef5-497d-8619-5961c73d67b4",
          "execution": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e1f7ef7a-990c-457f-b446-d10a8d6d30f6",
          "timestamp": 1596532984073,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "586551a7-06b8-441c-b075-f77056177da3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
              }
            }
          ]
        },
        "parent": {
          "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
          "name": "{order Id}",
          "item": [
            {
              "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f506679c-057d-4c66-beea-597d3c89671e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                  }
                }
              ]
            },
            {
              "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "586551a7-06b8-441c-b075-f77056177da3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "46eafb45-6e60-4dbb-9bf9-3d95fa134ed7",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "759a5f3f-3f7f-40a6-87dc-f23864513eb4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "bb0d64c1b1a9f4ee431c9efc2e03cfb1",
          "id": "9c2443de-bb40-4633-9336-51db9f95e432",
          "timestamp": 1596532984080,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "586551a7-06b8-441c-b075-f77056177da3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
              }
            }
          ]
        },
        "parent": {
          "id": "59781cfc-eb12-42b7-8940-3f27eddc45f8",
          "name": "{order Id}",
          "item": [
            {
              "id": "6342ab29-b029-4ba2-94bd-12a75ae42feb",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f506679c-057d-4c66-beea-597d3c89671e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7103c83d-a7bd-4d80-890f-538f00b92a9e",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7e9cc3f8-1495-475f-8989-b5b19327d3c9",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "786ad57c-8ef5-497d-8619-5961c73d67b4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "acf9592b-d5c6-4cb6-a709-72c452f6948a"
                  }
                }
              ]
            },
            {
              "id": "86c718ad-12dd-4280-81fd-b9c60618e095",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46e57fb8-15f4-4ac2-8e57-6cab1b79c044",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "586551a7-06b8-441c-b075-f77056177da3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "b3657e09-cc83-4006-a967-4414e9df95cf"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "46eafb45-6e60-4dbb-9bf9-3d95fa134ed7",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "759a5f3f-3f7f-40a6-87dc-f23864513eb4",
          "scriptId": "d26cfe59-64bc-4e70-a1a2-18f8843c4b18",
          "execution": "b3657e09-cc83-4006-a967-4414e9df95cf"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "c278f77e-0c8e-47a7-89fc-68ae4fa24ad6",
          "timestamp": 1596532984309,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "26ab443a-4197-4406-aeb6-ff8833200928",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cac61fe0-d8f4-4d94-931d-d484c8f401e2",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1d652691-bc14-4111-ad10-1628590b1165"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "0c5f1377-d79d-4ee8-8508-ac384ccdf63d",
          "timestamp": 1596532984316,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "26ab443a-4197-4406-aeb6-ff8833200928",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "cac61fe0-d8f4-4d94-931d-d484c8f401e2",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1d652691-bc14-4111-ad10-1628590b1165",
          "scriptId": "471b8bca-8356-446b-a2ce-6f60477b28d0"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "133f7120-4b54-42c9-93f9-8a88dc4f0bb1",
          "timestamp": 1596532984542,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ed65415c-2345-47e3-b237-b4a01b17e9f8",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4ff1dfd4-dfa3-451e-bf75-aad8c75d781e"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "9980ec88-dfcd-46c8-adee-b86fa71e5aed",
          "timestamp": 1596532984548,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ed65415c-2345-47e3-b237-b4a01b17e9f8",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4ff1dfd4-dfa3-451e-bf75-aad8c75d781e",
          "scriptId": "2c21b051-4a57-44a3-9f9f-08492764f6c7"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e87151e8-eeb2-4c43-81bf-692bdb9680fa",
          "timestamp": 1596532984775,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e47330b0-5b01-40df-be10-8711c009bab1",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0bb845af-015a-4609-82c7-c2db18722bb3",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39aa2e9b-46d2-4560-83c6-223376858cc4"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "024ef50a-b531-4d71-abf4-d3fdb04b8716",
          "timestamp": 1596532984782,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "e47330b0-5b01-40df-be10-8711c009bab1",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0bb845af-015a-4609-82c7-c2db18722bb3",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "39aa2e9b-46d2-4560-83c6-223376858cc4",
          "scriptId": "1da65a27-8d6a-4801-9bfe-a671ff5f955d"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "904b057d-f745-45e4-8fc6-7e94f11d3e03",
          "timestamp": 1596532985010,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "74672283"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "id proident"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"id proident\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3b60ed57-7563-47b0-93c1-2139db037ca9",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d19fe5c-b49d-4299-801b-89a168dabc35"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "de4d3c9272aa76cb3163a01dcfbfdc74",
          "id": "848ac210-b0ac-4e09-882e-23db7314a136",
          "timestamp": 1596532985016,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "74672283"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "id proident"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"id proident\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3b60ed57-7563-47b0-93c1-2139db037ca9",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6d19fe5c-b49d-4299-801b-89a168dabc35",
          "scriptId": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
          "execution": "e655b290-3b5f-481d-a597-81894ea32ca7"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "95061053-a663-4eb2-96ff-35f31c186ea5",
          "timestamp": 1596532985246,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e101d1dd-6e2d-43be-8b1b-46844ec8a271",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c2b300c-39a2-4cd3-8f1b-29780e887c63"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "3af519a5eae343afff1a10dcda1222cf",
          "id": "53a9d763-4d7b-4fe4-84b8-b338f15a223a",
          "timestamp": 1596532985250,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
              }
            }
          ]
        },
        "parent": {
          "id": "ab964881-0124-450d-9dc3-ce5849a22ea7",
          "name": "user",
          "item": [
            {
              "id": "26ab443a-4197-4406-aeb6-ff8833200928",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f6a64fd3-9fa7-4a13-ad9e-3e4d393d3dcf",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "471b8bca-8356-446b-a2ce-6f60477b28d0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "294ad7bf-ef7c-42d4-b8f7-01536de595d6"
                  }
                }
              ]
            },
            {
              "id": "eefd4fb8-5119-4573-8e70-2dd309e53238",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "17c200fb-0f8f-4ab7-9a1b-3a529c082100",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c21b051-4a57-44a3-9f9f-08492764f6c7",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "cdb1d1a5-1158-411e-8edf-e14d01f49dfd"
                  }
                }
              ]
            },
            {
              "id": "e47330b0-5b01-40df-be10-8711c009bab1",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c105ef7d-5705-476f-bb0f-a8ecc65ddcec",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1da65a27-8d6a-4801-9bfe-a671ff5f955d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "c7fcf3d6-de74-4937-833f-1680c2acb81c"
                  }
                }
              ]
            },
            {
              "id": "5dcdd4be-3d04-4a02-9ad4-fae1b0faa224",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f0b4866c-310a-404e-8c52-2c7d6247a18e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "74672283"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "id proident"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"id proident\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "6b915b7f-e349-4383-aeef-ba6252207c3c",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ccc9001-f6ec-4b3e-9dce-147f3b09ac02",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "e655b290-3b5f-481d-a597-81894ea32ca7"
                  }
                }
              ]
            },
            {
              "id": "0eb88a8e-d949-4c34-9f55-921d8e830a31",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "84b08ba5-d832-4e2f-958c-2a098d863623",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "636e51cb-5bec-4606-ade3-13bbff402202"
                  }
                }
              ]
            },
            {
              "id": "2186db1e-ba91-4c68-8656-268772723ff8",
              "name": "{username}",
              "item": [
                {
                  "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                      }
                    }
                  ]
                },
                {
                  "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                      }
                    }
                  ]
                },
                {
                  "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e101d1dd-6e2d-43be-8b1b-46844ec8a271",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3c2b300c-39a2-4cd3-8f1b-29780e887c63",
          "scriptId": "2b6433be-73cf-435a-ad69-cf55b06a65ed",
          "execution": "636e51cb-5bec-4606-ade3-13bbff402202"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "688d0872-fead-4ba7-acf9-64618a6f868b",
          "timestamp": 1596532985482,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5bd9c4ad-7d0d-4327-bf44-0a1d97708356",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b456635f-a65f-4483-9655-6fef89af86a3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "445013cff5fe7d306a2143c8cdc4fe24",
          "id": "436e9de9-b3ef-401a-8c99-a3778cac1323",
          "timestamp": 1596532985489,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5bd9c4ad-7d0d-4327-bf44-0a1d97708356",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b456635f-a65f-4483-9655-6fef89af86a3",
          "scriptId": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
          "execution": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "63834138-021b-4e2c-b5c3-a9577e1a6ecb",
          "timestamp": 1596532985719,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "45954b76-2d1f-4337-97af-6a0131219b40",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0bb12629-7d04-4602-a981-2bdb36c07c97"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "2ab8416ff7f1e8fcf2db537a453e6c30",
          "id": "126f4591-4ad4-4672-ac59-2f0c535b2ae2",
          "timestamp": 1596532985727,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "45954b76-2d1f-4337-97af-6a0131219b40",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0bb12629-7d04-4602-a981-2bdb36c07c97",
          "scriptId": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
          "execution": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "712a21a0-a453-4457-9ee0-1aeb67d4c944",
          "timestamp": 1596532985955,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a68a03c4-4fb5-4ae9-b7bf-71c8a901bb0e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6724e729-21be-40f3-a729-0c7358caf0d4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "84c31d8731ca94e279c57f674f5eaa0e",
          "id": "ebb4a058-c396-466d-9f11-05e02a167796",
          "timestamp": 1596532985961,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
              }
            }
          ]
        },
        "parent": {
          "id": "2186db1e-ba91-4c68-8656-268772723ff8",
          "name": "{username}",
          "item": [
            {
              "id": "aa5f31ba-236d-4592-9e81-adbf612c4fa0",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6bcacc35-2424-4784-b967-3c2b5be4bd46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e13e003d-e7da-4248-93cd-16faf310f7c5",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "94bfbd7b-8827-4c48-8da3-bc213c258473",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "50bbe01c-c0d7-407d-9997-c0ca13ff59a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3d0c072d-97be-4f40-8129-2dcb03d4ca15"
                  }
                }
              ]
            },
            {
              "id": "3673756c-29fd-4212-a3db-e9015c7d9924",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "8a810d97-6eeb-4487-90a4-e90bf6e1839e",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "561fab4e-3606-48d5-b6a2-ee4cc0292cc0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "35b66fc1-c9f3-4a69-9d07-8035289ae837",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "1d4e6e33-4c04-4bf9-b289-4f872f995434"
                  }
                }
              ]
            },
            {
              "id": "cf71a22a-92fc-4f92-87b9-aad4e40d2111",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "52d59003-af8f-4262-8fc2-8c0ba1818cbd",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d1d03f1b-20e8-4482-b998-473b09d60b8f",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7d575bcc-dcfa-4682-9e11-a0166d268542",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a68a03c4-4fb5-4ae9-b7bf-71c8a901bb0e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6724e729-21be-40f3-a729-0c7358caf0d4",
          "scriptId": "7d575bcc-dcfa-4682-9e11-a0166d268542",
          "execution": "47bb9679-03d6-4540-82f1-9ea9cdb734f1"
        }
      }
    ],
    "error": null
  }
}