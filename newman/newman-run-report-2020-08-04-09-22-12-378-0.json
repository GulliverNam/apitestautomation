{
  "collection": {
    "_": {
      "postman_id": "034e7d50-533c-4cc0-9555-640db3401616"
    },
    "item": [
      {
        "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
        "name": "pet",
        "item": [
          {
            "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
            "name": "Update an existing pet",
            "request": {
              "name": "Update an existing pet",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                "name": "Invalid ID supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                "name": "Pet not found",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                "name": "Validation exception",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                  ],
                  "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                }
              }
            ]
          },
          {
            "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
            "name": "Add a new pet to the store",
            "request": {
              "name": "Add a new pet to the store",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                "name": "Invalid input",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                  ],
                  "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                }
              }
            ]
          },
          {
            "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
            "name": "Finds Pets by status",
            "request": {
              "name": "Finds Pets by status",
              "description": {
                "content": "Multiple status values can be provided with comma separated strings",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByStatus"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  },
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                "name": "Invalid status value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                }
              }
            ]
          },
          {
            "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
            "name": "Finds Pets by tags",
            "request": {
              "name": "Finds Pets by tags",
              "description": {
                "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByTags"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                "name": "Invalid tag value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                }
              }
            ]
          },
          {
            "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
            "name": "{pet Id}",
            "item": [
              {
                "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                "name": "Find pet by ID",
                "request": {
                  "name": "Find pet by ID",
                  "description": {
                    "content": "Returns a single pet",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to return",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": ""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                    }
                  }
                ]
              },
              {
                "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                "name": "Updates a pet in the store with form data",
                "request": {
                  "name": "Updates a pet in the store with form data",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet that needs to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "description": {
                          "content": "Updated name of the pet",
                          "type": "text/plain"
                        },
                        "key": "name",
                        "value": "<string>"
                      },
                      {
                        "description": {
                          "content": "Updated status of the pet",
                          "type": "text/plain"
                        },
                        "key": "status",
                        "value": "<string>"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "878d5485-8647-4199-9654-e870570ad510",
                    "name": "Invalid input",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "urlencoded",
                        "urlencoded": [
                          {
                            "description": {
                              "content": "Updated name of the pet",
                              "type": "text/plain"
                            },
                            "key": "name",
                            "value": "<string>"
                          },
                          {
                            "description": {
                              "content": "Updated status of the pet",
                              "type": "text/plain"
                            },
                            "key": "status",
                            "value": "<string>"
                          }
                        ]
                      }
                    },
                    "status": "Method Not Allowed",
                    "code": 405,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                    }
                  }
                ]
              },
              {
                "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                "name": "Deletes a pet",
                "request": {
                  "name": "Deletes a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) Pet id to delete",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": "<string>"
                    }
                  ],
                  "method": "DELETE",
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                    }
                  }
                ]
              },
              {
                "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                "name": "uploads an image",
                "request": {
                  "name": "uploads an image",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId",
                      "uploadImage"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to update",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "multipart/form-data"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "description": {
                          "content": "Additional data to pass to server",
                          "type": "text/plain"
                        },
                        "key": "additionalMetadata",
                        "value": "<string>",
                        "type": "text"
                      },
                      {
                        "description": {
                          "content": "file to upload",
                          "type": "text/plain"
                        },
                        "key": "file",
                        "value": "<binary>",
                        "type": "text"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId",
                          "uploadImage"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "formdata",
                        "formdata": [
                          {
                            "description": {
                              "content": "Additional data to pass to server",
                              "type": "text/plain"
                            },
                            "key": "additionalMetadata",
                            "value": "<string>",
                            "type": "text"
                          },
                          {
                            "description": {
                              "content": "file to upload",
                              "type": "text/plain"
                            },
                            "key": "file",
                            "value": "<binary>",
                            "type": "text"
                          }
                        ]
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "f450928a-65ed-40cb-ba6f-7359c605dcb2",
        "name": "store",
        "item": [
          {
            "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
            "name": "Returns pet inventories by status",
            "request": {
              "name": "Returns pet inventories by status",
              "description": {
                "content": "Returns a map of status codes to quantities",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "store",
                  "inventory"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "api_key",
                  "value": ""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "store",
                      "inventory"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"elit ea ipsum\"",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
                }
              }
            ]
          },
          {
            "id": "dc8f2293-11ab-401e-8646-93fe6e4d0458",
            "name": "order",
            "item": [
              {
                "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
                "name": "Place an order for a pet",
                "request": {
                  "name": "Place an order for a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "store",
                      "order"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
                    "name": "Invalid Order",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
                    }
                  }
                ]
              },
              {
                "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
                "name": "{order Id}",
                "item": [
                  {
                    "id": "2296e3a7-ee29-428b-93aa-131064625608",
                    "name": "Find purchase order by ID",
                    "request": {
                      "name": "Find purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of pet that needs to be fetched",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "GET"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "json"
                        },
                        "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                        "name": "successful operation",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "OK",
                        "code": 200,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "596a4407-3365-451e-9f25-be871fb708cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
                    "name": "Delete purchase order by ID",
                    "request": {
                      "name": "Delete purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of the order that needs to be deleted",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "DELETE"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "15a3c800-7715-4781-8b45-3425296041b9",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
        "name": "user",
        "item": [
          {
            "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
            "name": "Create user",
            "request": {
              "name": "Create user",
              "description": {
                "content": "This can only be done by the logged in user.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                }
              }
            ]
          },
          {
            "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithArray"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithArray"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                }
              }
            ]
          },
          {
            "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithList"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithList"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                }
              }
            ]
          },
          {
            "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
            "name": "Logs user into the system",
            "request": {
              "name": "Logs user into the system",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) The user name for login",
                      "type": "text/plain"
                    },
                    "key": "username",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) The password for login in clear text",
                      "type": "text/plain"
                    },
                    "key": "password",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "description": {
                      "content": "calls per hour allowed by the user",
                      "type": "text/plain"
                    },
                    "key": "X-Rate-Limit",
                    "value": "65621596"
                  },
                  {
                    "description": {
                      "content": "date in UTC when token expires",
                      "type": "text/plain"
                    },
                    "key": "X-Expires-After",
                    "value": "aliqua esse eiusmod"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"aliqua esse eiusmod\"",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                "name": "Invalid username/password supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                }
              }
            ]
          },
          {
            "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
            "name": "Logs out current logged in user session",
            "request": {
              "name": "Logs out current logged in user session",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "logout"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "logout"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                }
              }
            ]
          },
          {
            "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
            "name": "{username}",
            "item": [
              {
                "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                "name": "Get user by user name",
                "request": {
                  "name": "Get user by user name",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "GET"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "c34de230-329b-421e-bfd7-f39546899b75",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                    }
                  }
                ]
              },
              {
                "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                "name": "Updated user",
                "request": {
                  "name": "Updated user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) name that need to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                    "name": "Invalid user supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                    }
                  }
                ]
              },
              {
                "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                "name": "Delete user",
                "request": {
                  "name": "Delete user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be deleted",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "DELETE"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "id": "baseUrl",
        "type": "string",
        "value": "https://petstore.swagger.io/v2"
      }
    ],
    "info": {
      "_postman_id": "034e7d50-533c-4cc0-9555-640db3401616",
      "name": "Swagger Petstore",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n\nContact Support:\n Email: apiteam@swagger.io",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "09baa9ba-4b16-4b1e-82bf-706a5920dcca",
    "values": []
  },
  "globals": {
    "id": "0ccce55c-2e8f-4e61-a125-3966afc8e98d",
    "values": [
      {
        "type": "any",
        "value": "http://petstore.swagger.io/v2",
        "key": "baseUrl"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 20,
        "pending": 0,
        "failed": 20
      },
      "tests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 17,
        "pending": 0,
        "failed": 17
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1596532926417,
      "completed": 1596532932161
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ca2bf2f-d89b-4a8d-b07b-ae46d92c4b9c",
          "httpRequestId": "268e692a-2deb-4a63-94dc-c55ec1e62957"
        },
        "item": {
          "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd399796-3d11-40ff-b088-429a013dfdad",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
              }
            }
          ]
        },
        "request": {
          "name": "Update an existing pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d8ea5b12-3983-4c63-aca3-b041bfd1e88a",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "536a0166-7cb2-436d-b5af-e08505bb4ad6",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aaec3b4f-cce9-49b6-9b66-228b136df07c"
        },
        "item": {
          "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
              }
            }
          ]
        },
        "request": {
          "name": "Add a new pet to the store",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "106f45ad-0fa7-4924-a97d-f76a68b08760",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 405",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 405",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "88d72ed8-7c3a-4205-bf33-092eab4cf21c",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55cf2a6e-b296-4302-b7d0-2b2a595b1687"
        },
        "item": {
          "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by status",
          "description": {
            "content": "Multiple status values can be provided with comma separated strings",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByStatus"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "status",
                "value": "available"
              },
              {
                "key": "status",
                "value": "available"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0be8d9e6-dd30-4e28-ba78-df37cb2cd822",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "db9c0092-4f13-4cf1-aeb4-abc5a6721371",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b2db914-ba83-42ad-b275-532693e49d45"
        },
        "item": {
          "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by tags",
          "description": {
            "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByTags"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              },
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f870f262-10a7-476c-8b43-9823fa6bdd6e",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "36b0a6da-99df-4531-b398-85143f9a1f44",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d3d6db1d-95c9-406a-8a7b-d1ef17301d5d"
        },
        "item": {
          "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "617f1927-9081-48ab-a099-b54280c6c48b",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
              }
            }
          ]
        },
        "request": {
          "name": "Find pet by ID",
          "description": {
            "content": "Returns a single pet",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "270b452a-ad2b-478c-ae16-a11ac4983735",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5f679241-6dac-4a8f-8ffa-83e6559803c8",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8dd1671-1066-4ec9-b472-7c8bebe48450"
        },
        "item": {
          "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "878d5485-8647-4199-9654-e870570ad510",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
              }
            }
          ]
        },
        "request": {
          "name": "Updates a pet in the store with form data",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c83b6c9f-4266-4c0b-a4f3-10a3832c2a76",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "description": {
                  "content": "Updated name of the pet",
                  "type": "text/plain"
                },
                "key": "name",
                "value": "<string>"
              },
              {
                "description": {
                  "content": "Updated status of the pet",
                  "type": "text/plain"
                },
                "key": "status",
                "value": "<string>"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f01721bb-f306-4062-82c5-6c0a20d8d91d",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a506716b-439b-4c8a-9f67-1c37d539eb19"
        },
        "item": {
          "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
              }
            }
          ]
        },
        "request": {
          "name": "Deletes a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": "<string>"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b2114fc7-ab23-482c-a02a-4d07b11086bb",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8470f39b-654e-457c-a496-bd1d5bc14540",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6caa4461-768b-4ae1-a087-c5bb5e07f973"
        },
        "item": {
          "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
              }
            }
          ]
        },
        "request": {
          "name": "uploads an image",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E",
              "uploadImage"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "multipart/form-data"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5d8f56af-da6c-4e76-8879-dec93da10181",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "description": {
                  "content": "Additional data to pass to server",
                  "type": "text/plain"
                },
                "key": "additionalMetadata",
                "value": "<string>",
                "type": "text"
              },
              {
                "description": {
                  "content": "file to upload",
                  "type": "text/plain"
                },
                "key": "file",
                "value": "<binary>",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "407e74a2-76c7-488f-a74f-a6508853b173",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "399631af-e035-4aef-8f96-b8b36f6ab33d"
        },
        "item": {
          "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"elit ea ipsum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
              }
            }
          ]
        },
        "request": {
          "name": "Returns pet inventories by status",
          "description": {
            "content": "Returns a map of status codes to quantities",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "inventory"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "927a74af-6403-4dd8-8dee-a101df3c891d",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "34f9bc23-7a55-4bce-bdb8-530195b2dc64",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a44b714b-b97d-4592-bc1e-cb2ed6c01c37"
        },
        "item": {
          "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
              }
            }
          ]
        },
        "request": {
          "name": "Place an order for a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "64e0384a-046f-4019-b8d4-bde26200fd8a",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
          }
        },
        "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "72213285-d144-49b8-b220-36ab3f9278fa",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1af1ae4c-96d7-4ad2-9cac-44206ec8187d"
        },
        "item": {
          "id": "2296e3a7-ee29-428b-93aa-131064625608",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "596a4407-3365-451e-9f25-be871fb708cb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
              }
            }
          ]
        },
        "request": {
          "name": "Find purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "410f57a4-48c5-4820-ac94-bf940103a307",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "2296e3a7-ee29-428b-93aa-131064625608",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "fd99c43a-0add-4f77-9599-c7650e8012df",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a124c280-4914-49a6-8567-77e149eed165"
        },
        "item": {
          "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15a3c800-7715-4781-8b45-3425296041b9",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
              }
            }
          ]
        },
        "request": {
          "name": "Delete purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "48f3ac7b-46b7-4cf3-ba95-51589df0883c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a4ee0251-483b-49b4-8020-ad04caf4b7bc",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "584556b5-3b4b-4680-be23-844a8d03f793"
        },
        "item": {
          "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "81922e24-593d-4248-8cf3-2433d3e81103",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
              }
            }
          ]
        },
        "request": {
          "name": "Create user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "46837727-cab8-4143-96dd-1a64fe64a5aa",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "1d6c4c9f-8344-44b6-b9a3-bbd6e7992522",
              "timestamp": 1596532930457,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "74a12a20-3529-4020-8e3e-4a129548ee48",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da122ae6-0dce-4e7d-be5d-c709d0528650"
        },
        "item": {
          "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithArray"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b21382f3-b107-4e93-9377-64730eed762c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "c5f46dd5-c8a8-4c4d-956f-796dd773db12",
              "timestamp": 1596532930698,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6dc59bec-c883-473e-9738-88d826abce14",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8e8f491d-7fea-467e-9bf4-573a32d1ff6b"
        },
        "item": {
          "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithList"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6877a92e-9d6a-4f38-8dca-43a2fbb0772d",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "0d9748f1-37c2-4d30-aab9-415d20c4ea0f",
              "timestamp": 1596532930937,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b3fc2b4f-5a30-4d7b-9817-64852d298245",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "553a8f39-8087-4216-8f8e-582ab0aff3eb"
        },
        "item": {
          "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "65621596"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "aliqua esse eiusmod"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"aliqua esse eiusmod\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
              }
            }
          ]
        },
        "request": {
          "name": "Logs user into the system",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "login"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "username",
                "value": "%3Cstring%3E"
              },
              {
                "key": "password",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "33f30c3a-4a36-4577-8fa9-6921a4a2aca4",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b45ac891-45b0-424f-ad21-b5305f7e6c7f",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2bb7a2c6-6e10-438a-8363-465a14283ac8"
        },
        "item": {
          "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
              }
            }
          ]
        },
        "request": {
          "name": "Logs out current logged in user session",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "logout"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8b50fe61-e64d-48af-b8de-ff25e8221aa6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6d4d062f-3e17-45bf-a382-013b89d5ad11",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c68cd045-4e93-4c9e-925e-5787b473d853"
        },
        "item": {
          "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c34de230-329b-421e-bfd7-f39546899b75",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
              }
            }
          ]
        },
        "request": {
          "name": "Get user by user name",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "088d51d4-ad27-4405-9efb-bfebbe75993c",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f9ac5e58-41ed-426c-99d0-27eea745804f",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae4c0d05-eadd-4b27-a07a-aee9eb24b657"
        },
        "item": {
          "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
              }
            }
          ]
        },
        "request": {
          "name": "Updated user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "2c536ee2-bf33-4f10-ab3b-0946681e4b04",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ea466c19-742a-449e-a825-18f9b7b5c68e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9efd62da-19d2-43c4-937a-80d076da81d5"
        },
        "item": {
          "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
              }
            }
          ]
        },
        "request": {
          "name": "Delete user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a8b3080e-45a1-4c88-b3fb-a80d6e3f42aa",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "90a7e75b-4401-4b2a-9e1b-231222504438",
          "timestamp": 1596532927004,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd399796-3d11-40ff-b088-429a013dfdad",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ca2bf2f-d89b-4a8d-b07b-ae46d92c4b9c",
          "httpRequestId": "268e692a-2deb-4a63-94dc-c55ec1e62957"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "85ff1c86bc688d3966ec6090a7b0d321",
          "id": "41d18e61-d3ab-4a80-9a62-70f0af69d838",
          "timestamp": 1596532927030,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd399796-3d11-40ff-b088-429a013dfdad",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4ca2bf2f-d89b-4a8d-b07b-ae46d92c4b9c",
          "httpRequestId": "268e692a-2deb-4a63-94dc-c55ec1e62957",
          "scriptId": "0464b122-2ecd-408e-b229-3fe182864b22",
          "execution": "9982a2df-fc58-42a5-add3-6a945de764b5"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "ef696a74-36da-45a1-9b59-1a665db415d8",
          "timestamp": 1596532927554,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "536a0166-7cb2-436d-b5af-e08505bb4ad6",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aaec3b4f-cce9-49b6-9b66-228b136df07c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 405",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "497539ef15e2cb4b88e23d6ee7bd4863",
          "id": "093417f3-baf8-4abc-8e93-d5463ac2d0a9",
          "timestamp": 1596532927561,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "536a0166-7cb2-436d-b5af-e08505bb4ad6",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aaec3b4f-cce9-49b6-9b66-228b136df07c",
          "scriptId": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
          "execution": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "cac13612-ba01-4ec9-93b1-42cb1c628d74",
          "timestamp": 1596532927899,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "88d72ed8-7c3a-4205-bf33-092eab4cf21c",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55cf2a6e-b296-4302-b7d0-2b2a595b1687"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9de577dff71de30db258f6e6486cf387",
          "id": "8d877e92-fc79-4229-9f2b-d30aff9a9ae4",
          "timestamp": 1596532927909,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "88d72ed8-7c3a-4205-bf33-092eab4cf21c",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "55cf2a6e-b296-4302-b7d0-2b2a595b1687",
          "scriptId": "ab0017e0-4c87-4027-86f8-84c75983a4db",
          "execution": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "4243bb94-93e9-4871-8508-545fafcb8fee",
          "timestamp": 1596532928158,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "db9c0092-4f13-4cf1-aeb4-abc5a6721371",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b2db914-ba83-42ad-b275-532693e49d45"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "a4f60c640f07b02d0fd2d60a737d3a01",
          "id": "7b782711-799d-49f6-8368-a2ddae94053f",
          "timestamp": 1596532928166,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
              }
            }
          ]
        },
        "parent": {
          "id": "e96f3438-67d0-4112-8827-f6c08b496d81",
          "name": "pet",
          "item": [
            {
              "id": "893c6943-392b-481c-88d3-4c0500e14eb4",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd399796-3d11-40ff-b088-429a013dfdad",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "422c3128-6a04-41f0-a1f6-77f12b116ca5",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "64605817-839b-4e53-afe6-ef108c1ed48b",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0464b122-2ecd-408e-b229-3fe182864b22",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "9982a2df-fc58-42a5-add3-6a945de764b5"
                  }
                }
              ]
            },
            {
              "id": "b4e05da4-0e0b-47ee-a87d-be8719fce905",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "fd23faa8-9768-4a8f-b603-382fe50b71a4",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "93c8c43b-a42d-4460-8911-c94b5ff5a10c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "25db84f3-ea52-4300-b2be-3eb2198eb93e"
                  }
                }
              ]
            },
            {
              "id": "bb12b4fe-3ad1-43da-9f67-9ec84a4e7a04",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "390d29e6-ff7c-484a-be25-66a3fc868260",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "18d5ca7f-82d5-4a21-8717-587213cb2303",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ab0017e0-4c87-4027-86f8-84c75983a4db",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0dc5e2a0-6bc7-4843-944e-cbf9491d5dd7"
                  }
                }
              ]
            },
            {
              "id": "e3582f4e-a554-445a-b528-8f60b50e9657",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63e37c1f-4966-4e6c-844f-a9182e7b474e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c3b8a64a-241d-4c9b-ac11-b4a3f572079e",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
                  }
                }
              ]
            },
            {
              "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                      }
                    }
                  ]
                },
                {
                  "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "878d5485-8647-4199-9654-e870570ad510",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                      }
                    }
                  ]
                },
                {
                  "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                      }
                    }
                  ]
                },
                {
                  "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "db9c0092-4f13-4cf1-aeb4-abc5a6721371",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "6b2db914-ba83-42ad-b275-532693e49d45",
          "scriptId": "4c2b2bca-ea1b-4391-83de-f385edb83dcc",
          "execution": "9af00f57-8b23-4033-b55a-7a5f4b0e0f59"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "246359c2-fb40-4c71-9ba9-284b8cd43114",
          "timestamp": 1596532928408,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "617f1927-9081-48ab-a099-b54280c6c48b",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "36b0a6da-99df-4531-b398-85143f9a1f44",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d3d6db1d-95c9-406a-8a7b-d1ef17301d5d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "973a8a624d47a6ce4f2d284508a75218",
          "id": "1af015bf-849f-4568-99c6-1d02ae6a7499",
          "timestamp": 1596532928414,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "617f1927-9081-48ab-a099-b54280c6c48b",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "36b0a6da-99df-4531-b398-85143f9a1f44",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d3d6db1d-95c9-406a-8a7b-d1ef17301d5d",
          "scriptId": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
          "execution": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "3bab43dd-6c0b-4e39-9c7a-62c44bfa2033",
          "timestamp": 1596532928661,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "878d5485-8647-4199-9654-e870570ad510",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5f679241-6dac-4a8f-8ffa-83e6559803c8",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8dd1671-1066-4ec9-b472-7c8bebe48450"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "e80ed07240705f473c39b64429fff707",
          "id": "6dab37e2-a63d-4221-ab71-f7947de922fd",
          "timestamp": 1596532928668,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "878d5485-8647-4199-9654-e870570ad510",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "5f679241-6dac-4a8f-8ffa-83e6559803c8",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b8dd1671-1066-4ec9-b472-7c8bebe48450",
          "scriptId": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
          "execution": "02ab333e-3917-41d9-ac20-3699062630e6"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "72f9b49b-de26-4165-9080-39e9b4404a5e",
          "timestamp": 1596532928908,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f01721bb-f306-4062-82c5-6c0a20d8d91d",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a506716b-439b-4c8a-9f67-1c37d539eb19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "0c034fabbdfc9ea060501c07e1911380",
          "id": "be242c7c-bd3b-4b6f-a252-c5b0fe875e4a",
          "timestamp": 1596532928915,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f01721bb-f306-4062-82c5-6c0a20d8d91d",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a506716b-439b-4c8a-9f67-1c37d539eb19",
          "scriptId": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
          "execution": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "7ea0aa2c-dcfb-4868-98f5-53417c29289a",
          "timestamp": 1596532929165,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8470f39b-654e-457c-a496-bd1d5bc14540",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6caa4461-768b-4ae1-a087-c5bb5e07f973"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d959e0276ee3bc5ad25a0c9642e0d785",
          "id": "eea9bd22-30a3-4eef-9e7f-eef514510ff0",
          "timestamp": 1596532929174,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
              }
            }
          ]
        },
        "parent": {
          "id": "ef5e566c-bcb0-4901-b5c5-6616bb8bbc3a",
          "name": "{pet Id}",
          "item": [
            {
              "id": "da6f6714-9ecb-4928-8bbc-bec473f2364b",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "978952ed-43aa-49df-bd28-86d8f5293dc6",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "617f1927-9081-48ab-a099-b54280c6c48b",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a5b9a218-44ce-40f5-a0a8-cc9020860380",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a25f2c13-c208-461a-a2b4-6e0ed96f2490",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "d5a066a9-fabb-4f78-92f2-7ce39bfdb5c4"
                  }
                }
              ]
            },
            {
              "id": "42244ffa-8967-43ca-98d5-2ae43857baef",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "878d5485-8647-4199-9654-e870570ad510",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9f5f4dd2-fb92-46e5-80c5-6ebc95338122",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "02ab333e-3917-41d9-ac20-3699062630e6"
                  }
                }
              ]
            },
            {
              "id": "1e00230b-3ba0-4ba5-9244-116713734c4e",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "e8fc5d12-6d03-484b-9af3-c40a09a38403",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4ba5123c-fa43-43e1-850d-180b062cb5fc",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba62195-5fbd-4136-9543-0f1f03266ae3",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4ed92010-98ad-4f39-9fe4-d50fd9cd14bd"
                  }
                }
              ]
            },
            {
              "id": "9b9a5fca-aa86-4a77-8c97-5b8317761887",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "50921623-b226-4234-bd9f-8dc7cffb18d8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": -54064765,\n \"type\": \"nostrud voluptate\",\n \"message\": \"culpa ea Ut aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "8470f39b-654e-457c-a496-bd1d5bc14540",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "6caa4461-768b-4ae1-a087-c5bb5e07f973",
          "scriptId": "ee8bf1f3-f5f2-48d8-95a1-bd0b70a78df5",
          "execution": "ef78d6c6-347c-46a8-9040-5f9fd56df7a3"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "f8182f86-dc59-4fcb-b6bf-4767873c74de",
          "timestamp": 1596532929411,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"elit ea ipsum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
              }
            }
          ]
        },
        "parent": {
          "id": "f450928a-65ed-40cb-ba6f-7359c605dcb2",
          "name": "store",
          "item": [
            {
              "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"elit ea ipsum\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
                  }
                }
              ]
            },
            {
              "id": "dc8f2293-11ab-401e-8646-93fe6e4d0458",
              "name": "order",
              "item": [
                {
                  "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
                      }
                    }
                  ]
                },
                {
                  "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "2296e3a7-ee29-428b-93aa-131064625608",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "596a4407-3365-451e-9f25-be871fb708cb",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                          }
                        }
                      ]
                    },
                    {
                      "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "15a3c800-7715-4781-8b45-3425296041b9",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "407e74a2-76c7-488f-a74f-a6508853b173",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "399631af-e035-4aef-8f96-b8b36f6ab33d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "0d1e1602368a011911e90768e4192adc",
          "id": "fc6d53c5-4b90-448c-bef0-59288d2f9b0c",
          "timestamp": 1596532929418,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"elit ea ipsum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
              }
            }
          ]
        },
        "parent": {
          "id": "f450928a-65ed-40cb-ba6f-7359c605dcb2",
          "name": "store",
          "item": [
            {
              "id": "e3b4dc1f-83e2-4976-8ed9-a4beceacfa26",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "63b6d4d9-2f23-4caa-9755-d0bdd800254e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"elit ea ipsum\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "772da3b4-9f02-41c9-809c-7d23715a573f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
                  }
                }
              ]
            },
            {
              "id": "dc8f2293-11ab-401e-8646-93fe6e4d0458",
              "name": "order",
              "item": [
                {
                  "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
                      }
                    }
                  ]
                },
                {
                  "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "2296e3a7-ee29-428b-93aa-131064625608",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "596a4407-3365-451e-9f25-be871fb708cb",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                          }
                        }
                      ]
                    },
                    {
                      "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "15a3c800-7715-4781-8b45-3425296041b9",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "407e74a2-76c7-488f-a74f-a6508853b173",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "399631af-e035-4aef-8f96-b8b36f6ab33d",
          "scriptId": "772da3b4-9f02-41c9-809c-7d23715a573f",
          "execution": "8b4b2ac5-ac6a-4f23-9841-02a1d7f30002"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "ba760025-2cae-4695-97ef-5d768c1df0c5",
          "timestamp": 1596532929688,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
              }
            }
          ]
        },
        "parent": {
          "id": "dc8f2293-11ab-401e-8646-93fe6e4d0458",
          "name": "order",
          "item": [
            {
              "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
                  }
                }
              ]
            },
            {
              "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
              "name": "{order Id}",
              "item": [
                {
                  "id": "2296e3a7-ee29-428b-93aa-131064625608",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "596a4407-3365-451e-9f25-be871fb708cb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                      }
                    }
                  ]
                },
                {
                  "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15a3c800-7715-4781-8b45-3425296041b9",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "34f9bc23-7a55-4bce-bdb8-530195b2dc64",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a44b714b-b97d-4592-bc1e-cb2ed6c01c37"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "664ae328d7ced97074a641d349fcd479",
          "id": "ae5c1b05-8330-41e8-b8d4-a1e46a8ae62e",
          "timestamp": 1596532929698,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
              }
            }
          ]
        },
        "parent": {
          "id": "dc8f2293-11ab-401e-8646-93fe6e4d0458",
          "name": "order",
          "item": [
            {
              "id": "642da81e-b191-49b1-ad63-ad1d2ee5856f",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "2b9eac41-8d9d-4b14-9d5b-6038f629a973",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "46a0260a-bb45-45f8-9cc2-62e5165377ac",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "3908efe0-c257-4640-946d-4d669a5308a1"
                  }
                }
              ]
            },
            {
              "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
              "name": "{order Id}",
              "item": [
                {
                  "id": "2296e3a7-ee29-428b-93aa-131064625608",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "596a4407-3365-451e-9f25-be871fb708cb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                      }
                    }
                  ]
                },
                {
                  "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15a3c800-7715-4781-8b45-3425296041b9",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "34f9bc23-7a55-4bce-bdb8-530195b2dc64",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a44b714b-b97d-4592-bc1e-cb2ed6c01c37",
          "scriptId": "9c98db9f-4f82-4bb6-a87d-f91e36df947a",
          "execution": "3908efe0-c257-4640-946d-4d669a5308a1"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "71252f42-622d-43ce-a268-47d653a23969",
          "timestamp": 1596532929950,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "2296e3a7-ee29-428b-93aa-131064625608",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "596a4407-3365-451e-9f25-be871fb708cb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
              }
            }
          ]
        },
        "parent": {
          "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
          "name": "{order Id}",
          "item": [
            {
              "id": "2296e3a7-ee29-428b-93aa-131064625608",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "596a4407-3365-451e-9f25-be871fb708cb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                  }
                }
              ]
            },
            {
              "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15a3c800-7715-4781-8b45-3425296041b9",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "72213285-d144-49b8-b220-36ab3f9278fa",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1af1ae4c-96d7-4ad2-9cac-44206ec8187d"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "98f097503fe3f2041833585404f05c45",
          "id": "d9ed85d3-1009-4763-9663-88e064b5360d",
          "timestamp": 1596532929958,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2296e3a7-ee29-428b-93aa-131064625608",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "596a4407-3365-451e-9f25-be871fb708cb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
              }
            }
          ]
        },
        "parent": {
          "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
          "name": "{order Id}",
          "item": [
            {
              "id": "2296e3a7-ee29-428b-93aa-131064625608",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "596a4407-3365-451e-9f25-be871fb708cb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                  }
                }
              ]
            },
            {
              "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15a3c800-7715-4781-8b45-3425296041b9",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "72213285-d144-49b8-b220-36ab3f9278fa",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1af1ae4c-96d7-4ad2-9cac-44206ec8187d",
          "scriptId": "596a4407-3365-451e-9f25-be871fb708cb",
          "execution": "72f7da86-8329-4009-981e-775c29e99f47"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "a0217a3a-5425-48dc-8d68-8074c8ebc717",
          "timestamp": 1596532930200,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15a3c800-7715-4781-8b45-3425296041b9",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
              }
            }
          ]
        },
        "parent": {
          "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
          "name": "{order Id}",
          "item": [
            {
              "id": "2296e3a7-ee29-428b-93aa-131064625608",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "596a4407-3365-451e-9f25-be871fb708cb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                  }
                }
              ]
            },
            {
              "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15a3c800-7715-4781-8b45-3425296041b9",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fd99c43a-0add-4f77-9599-c7650e8012df",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a124c280-4914-49a6-8567-77e149eed165"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "bb0d64c1b1a9f4ee431c9efc2e03cfb1",
          "id": "417b63f2-1b7a-431a-bb96-aac0c71150ab",
          "timestamp": 1596532930208,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15a3c800-7715-4781-8b45-3425296041b9",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
              }
            }
          ]
        },
        "parent": {
          "id": "c04f0bdf-1e59-415b-a31f-9e9551276242",
          "name": "{order Id}",
          "item": [
            {
              "id": "2296e3a7-ee29-428b-93aa-131064625608",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "32e29fb7-034e-42fe-8b24-f842dbd87155",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "2fe68cc1-8b74-40f1-8c03-278b03ccb645",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "779f5d32-61f6-4759-869f-58a87bfc5203",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "596a4407-3365-451e-9f25-be871fb708cb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "72f7da86-8329-4009-981e-775c29e99f47"
                  }
                }
              ]
            },
            {
              "id": "8940262a-ec26-4074-8b67-7eec523e39f9",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15a3c800-7715-4781-8b45-3425296041b9",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "a75f9f12-8e5e-4d33-919f-f1e43298a6e7",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f9658605-6a64-4ad5-899e-857272b8544f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "fd99c43a-0add-4f77-9599-c7650e8012df",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a124c280-4914-49a6-8567-77e149eed165",
          "scriptId": "f9658605-6a64-4ad5-899e-857272b8544f",
          "execution": "ba82f3e5-1b1b-4242-ab12-0805d2686691"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "bbe42849-8bed-4554-841a-db89b346468b",
          "timestamp": 1596532930451,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "81922e24-593d-4248-8cf3-2433d3e81103",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a4ee0251-483b-49b4-8020-ad04caf4b7bc",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "584556b5-3b4b-4680-be23-844a8d03f793"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "1d6c4c9f-8344-44b6-b9a3-bbd6e7992522",
          "timestamp": 1596532930457,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "81922e24-593d-4248-8cf3-2433d3e81103",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "a4ee0251-483b-49b4-8020-ad04caf4b7bc",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "584556b5-3b4b-4680-be23-844a8d03f793",
          "scriptId": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "252fd05c-45dc-4ca6-b1e9-4c60f6584737",
          "timestamp": 1596532930691,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "74a12a20-3529-4020-8e3e-4a129548ee48",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da122ae6-0dce-4e7d-be5d-c709d0528650"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "c5f46dd5-c8a8-4c4d-956f-796dd773db12",
          "timestamp": 1596532930698,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "74a12a20-3529-4020-8e3e-4a129548ee48",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "da122ae6-0dce-4e7d-be5d-c709d0528650",
          "scriptId": "57be798b-4624-4fcb-89b4-8f4394865959"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "7186883c-6049-4f74-ba4e-913053b21327",
          "timestamp": 1596532930929,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6dc59bec-c883-473e-9738-88d826abce14",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8e8f491d-7fea-467e-9bf4-573a32d1ff6b"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "0d9748f1-37c2-4d30-aab9-415d20c4ea0f",
          "timestamp": 1596532930937,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6dc59bec-c883-473e-9738-88d826abce14",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8e8f491d-7fea-467e-9bf4-573a32d1ff6b",
          "scriptId": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "99a11d23-7de2-4fa5-841d-c79add13121d",
          "timestamp": 1596532931174,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "65621596"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "aliqua esse eiusmod"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"aliqua esse eiusmod\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3fc2b4f-5a30-4d7b-9817-64852d298245",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "553a8f39-8087-4216-8f8e-582ab0aff3eb"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "de4d3c9272aa76cb3163a01dcfbfdc74",
          "id": "6868da36-a029-4ac4-bfc3-2ac65fe40134",
          "timestamp": 1596532931182,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "65621596"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "aliqua esse eiusmod"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"aliqua esse eiusmod\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b3fc2b4f-5a30-4d7b-9817-64852d298245",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "553a8f39-8087-4216-8f8e-582ab0aff3eb",
          "scriptId": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
          "execution": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "68441dd8-d861-4835-8b78-857412af424f",
          "timestamp": 1596532931417,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b45ac891-45b0-424f-ad21-b5305f7e6c7f",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2bb7a2c6-6e10-438a-8363-465a14283ac8"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "3af519a5eae343afff1a10dcda1222cf",
          "id": "93b6f1e3-5020-41c2-906b-58968e81e4ee",
          "timestamp": 1596532931422,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
              }
            }
          ]
        },
        "parent": {
          "id": "ddbb3bc6-6dd3-4bd4-9f5f-9e31a0b31345",
          "name": "user",
          "item": [
            {
              "id": "ce940636-647a-4475-bfd1-9fc6175399b5",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "81922e24-593d-4248-8cf3-2433d3e81103",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9658e8d1-a12a-46dc-a8d8-ac351eb7731e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "06d5f0fc-b267-4750-afa9-14710eec1e61"
                  }
                }
              ]
            },
            {
              "id": "8bad1aaf-11d8-4a5e-bc55-c72c7d3480f6",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "0c349744-3899-4d91-811f-8ba61b3fb1a0",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "57be798b-4624-4fcb-89b4-8f4394865959",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "a81cd628-2a79-4175-bf6f-c2617773ed69"
                  }
                }
              ]
            },
            {
              "id": "12b91b00-5249-451b-8a84-c557daf8fd21",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "cdab8304-ed86-46f8-af58-53dae2cfc169",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "895ebdad-6e1f-4457-9f93-57e8c9a80b9d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "39b4ca14-73ee-407c-90ee-d64145bba129"
                  }
                }
              ]
            },
            {
              "id": "7e962474-fc0d-4c64-ba88-43d883b191b5",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "0504fb19-5865-46fe-8b1f-3b91fb4dfd0a",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "65621596"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "aliqua esse eiusmod"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"aliqua esse eiusmod\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "570ee91f-8f3f-4a18-9ab9-bdd9e0747ef7",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7169d4f8-305c-4324-9f82-1cf7bf73985a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "29b7949f-081f-4dc7-a24d-d801989b3eb5"
                  }
                }
              ]
            },
            {
              "id": "450c1871-99af-4766-92d4-f58ecb2baa13",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "874a4c0e-2d57-4abf-aaf4-727dcebc7d5d",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "0d2028b4-58bb-4388-9679-f7567875f7b4"
                  }
                }
              ]
            },
            {
              "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
              "name": "{username}",
              "item": [
                {
                  "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c34de230-329b-421e-bfd7-f39546899b75",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                      }
                    }
                  ]
                },
                {
                  "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                      }
                    }
                  ]
                },
                {
                  "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b45ac891-45b0-424f-ad21-b5305f7e6c7f",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2bb7a2c6-6e10-438a-8363-465a14283ac8",
          "scriptId": "2ef0a963-3203-4b05-a162-95f9a1b7c589",
          "execution": "0d2028b4-58bb-4388-9679-f7567875f7b4"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "660d2dfb-5556-4da3-a0ff-702cb551299f",
          "timestamp": 1596532931658,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c34de230-329b-421e-bfd7-f39546899b75",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6d4d062f-3e17-45bf-a382-013b89d5ad11",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c68cd045-4e93-4c9e-925e-5787b473d853"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "445013cff5fe7d306a2143c8cdc4fe24",
          "id": "b9163341-06d6-4bed-b8e8-e81a303b9f74",
          "timestamp": 1596532931667,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c34de230-329b-421e-bfd7-f39546899b75",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6d4d062f-3e17-45bf-a382-013b89d5ad11",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c68cd045-4e93-4c9e-925e-5787b473d853",
          "scriptId": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
          "execution": "1c52e649-21f9-4a15-94f7-a10876288e03"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "13190579-90d7-491d-accd-4e0d132d1db9",
          "timestamp": 1596532931904,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f9ac5e58-41ed-426c-99d0-27eea745804f",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae4c0d05-eadd-4b27-a07a-aee9eb24b657"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "2ab8416ff7f1e8fcf2db537a453e6c30",
          "id": "7589da54-9ffb-4177-87bf-04a5ccac7694",
          "timestamp": 1596532931912,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "f9ac5e58-41ed-426c-99d0-27eea745804f",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ae4c0d05-eadd-4b27-a07a-aee9eb24b657",
          "scriptId": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
          "execution": "144ebb49-2d74-4d5b-ad35-223023b02220"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "3ed49e42-b44e-402a-b8ec-77f8c18d4404",
          "timestamp": 1596532932148,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ea466c19-742a-449e-a825-18f9b7b5c68e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9efd62da-19d2-43c4-937a-80d076da81d5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "84c31d8731ca94e279c57f674f5eaa0e",
          "id": "c33e790e-76d1-4a4c-a94c-39be80840e93",
          "timestamp": 1596532932155,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
              }
            }
          ]
        },
        "parent": {
          "id": "298ce75f-d28a-4c01-acb9-e7a07e3fd4b0",
          "name": "{username}",
          "item": [
            {
              "id": "9e99ab33-36c1-4cbd-a645-e238145f4852",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bc17228-b2b6-4c69-8531-6a1d3ac458f3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c34de230-329b-421e-bfd7-f39546899b75",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "15308e01-a6df-4f27-a142-32d4a61c2e62",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c9b46b36-0e41-4161-99c6-8402b3ba671e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "1c52e649-21f9-4a15-94f7-a10876288e03"
                  }
                }
              ]
            },
            {
              "id": "d8e98848-2109-4bb9-996e-4ba1e3256927",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "758b97a4-2cdd-4866-81e6-7a3d4d685a12",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "7ed28400-c8c9-4ece-aed4-16ee5dceaca0",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aeb1358e-4ed7-4a85-8850-03ce403baa5f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "144ebb49-2d74-4d5b-ad35-223023b02220"
                  }
                }
              ]
            },
            {
              "id": "74ab344f-f4fe-4991-9718-f2cdb622bc42",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "27f9fb3d-18bd-46f0-85a9-dde2b3cff6d3",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5d8289b1-ca3c-44f9-a9a2-e57fe5c22b74",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ea466c19-742a-449e-a825-18f9b7b5c68e",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9efd62da-19d2-43c4-937a-80d076da81d5",
          "scriptId": "3fe8b6f3-7eb7-4cc6-b58d-81405ed18514",
          "execution": "48b6f9d2-c7de-43ca-876c-0e8472387e56"
        }
      }
    ],
    "error": null
  }
}