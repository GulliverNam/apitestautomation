{
  "collection": {
    "_": {
      "postman_id": "a276ee94-0b8b-4c1e-b292-04c8d111bb42"
    },
    "item": [
      {
        "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
        "name": "pet",
        "item": [
          {
            "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
            "name": "Update an existing pet",
            "request": {
              "name": "Update an existing pet",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "41e28865-2165-47d0-997b-e82d6770b332",
                "name": "Invalid ID supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                "name": "Pet not found",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Not Found",
                "code": 404,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                "name": "Validation exception",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                  ],
                  "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                }
              }
            ]
          },
          {
            "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
            "name": "Add a new pet to the store",
            "request": {
              "name": "Add a new pet to the store",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
              },
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                "name": "Invalid input",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                  }
                },
                "status": "Method Not Allowed",
                "code": 405,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                  ],
                  "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                }
              }
            ]
          },
          {
            "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
            "name": "Finds Pets by status",
            "request": {
              "name": "Finds Pets by status",
              "description": {
                "content": "Multiple status values can be provided with comma separated strings",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByStatus"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  },
                  {
                    "description": {
                      "content": "(Required) Status values that need to be considered for filter",
                      "type": "text/plain"
                    },
                    "key": "status",
                    "value": "available"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                "name": "Invalid status value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByStatus"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "status",
                        "value": "available"
                      },
                      {
                        "key": "status",
                        "value": "available"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                }
              }
            ]
          },
          {
            "id": "74e221af-e493-408a-859e-23424ada3018",
            "name": "Finds Pets by tags",
            "request": {
              "name": "Finds Pets by tags",
              "description": {
                "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "pet",
                  "findByTags"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) Tags to filter by",
                      "type": "text/plain"
                    },
                    "key": "tags",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "auth": {
                "type": "oauth2",
                "oauth2": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                "name": "Invalid tag value",
                "originalRequest": {
                  "url": {
                    "path": [
                      "pet",
                      "findByTags"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "tags",
                        "value": "<string>"
                      },
                      {
                        "key": "tags",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                }
              }
            ]
          },
          {
            "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
            "name": "{pet Id}",
            "item": [
              {
                "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                "name": "Find pet by ID",
                "request": {
                  "name": "Find pet by ID",
                  "description": {
                    "content": "Returns a single pet",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to return",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": ""
                    }
                  ],
                  "method": "GET",
                  "auth": {
                    "type": "noauth",
                    "noauth": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                    }
                  }
                ]
              },
              {
                "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                "name": "Updates a pet in the store with form data",
                "request": {
                  "name": "Updates a pet in the store with form data",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet that needs to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/x-www-form-urlencoded"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                      {
                        "description": {
                          "content": "Updated name of the pet",
                          "type": "text/plain"
                        },
                        "key": "name",
                        "value": "<string>"
                      },
                      {
                        "description": {
                          "content": "Updated status of the pet",
                          "type": "text/plain"
                        },
                        "key": "status",
                        "value": "<string>"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                    "name": "Invalid input",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "urlencoded",
                        "urlencoded": [
                          {
                            "description": {
                              "content": "Updated name of the pet",
                              "type": "text/plain"
                            },
                            "key": "name",
                            "value": "<string>"
                          },
                          {
                            "description": {
                              "content": "Updated status of the pet",
                              "type": "text/plain"
                            },
                            "key": "status",
                            "value": "<string>"
                          }
                        ]
                      }
                    },
                    "status": "Method Not Allowed",
                    "code": 405,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                    }
                  }
                ]
              },
              {
                "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                "name": "Deletes a pet",
                "request": {
                  "name": "Deletes a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) Pet id to delete",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "api_key",
                      "value": "<string>"
                    }
                  ],
                  "method": "DELETE",
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                    "name": "Invalid ID supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                    "name": "Pet not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "header": [
                        {
                          "description": {
                            "content": "",
                            "type": "text/plain"
                          },
                          "key": "api_key",
                          "value": "<string>"
                        }
                      ],
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                    }
                  }
                ]
              },
              {
                "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                "name": "uploads an image",
                "request": {
                  "name": "uploads an image",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "pet",
                      ":petId",
                      "uploadImage"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) ID of pet to update",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<long>",
                        "key": "petId"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "multipart/form-data"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "description": {
                          "content": "Additional data to pass to server",
                          "type": "text/plain"
                        },
                        "key": "additionalMetadata",
                        "value": "<string>",
                        "type": "text"
                      },
                      {
                        "description": {
                          "content": "file to upload",
                          "type": "text/plain"
                        },
                        "key": "file",
                        "value": "<binary>",
                        "type": "text"
                      }
                    ]
                  },
                  "auth": {
                    "type": "oauth2",
                    "oauth2": []
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "pet",
                          ":petId",
                          "uploadImage"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "petId"
                          }
                        ]
                      },
                      "method": "POST",
                      "body": {
                        "mode": "formdata",
                        "formdata": [
                          {
                            "description": {
                              "content": "Additional data to pass to server",
                              "type": "text/plain"
                            },
                            "key": "additionalMetadata",
                            "value": "<string>",
                            "type": "text"
                          },
                          {
                            "description": {
                              "content": "file to upload",
                              "type": "text/plain"
                            },
                            "key": "file",
                            "value": "<binary>",
                            "type": "text"
                          }
                        ]
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                      ],
                      "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "b93c4fcd-d48e-40bb-a335-8b96f3db21f0",
        "name": "store",
        "item": [
          {
            "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
            "name": "Returns pet inventories by status",
            "request": {
              "name": "Returns pet inventories by status",
              "description": {
                "content": "Returns a map of status codes to quantities",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "store",
                  "inventory"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "api_key",
                  "value": ""
                }
              ],
              "method": "GET",
              "auth": {
                "type": "noauth",
                "noauth": []
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "store",
                      "inventory"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"sint laborum\"",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
                }
              }
            ]
          },
          {
            "id": "24a71cbd-f742-40cb-9a17-162b6863024b",
            "name": "order",
            "item": [
              {
                "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
                "name": "Place an order for a pet",
                "request": {
                  "name": "Place an order for a pet",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "store",
                      "order"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
                    "name": "Invalid Order",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "store",
                          "order"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
                    }
                  }
                ]
              },
              {
                "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
                "name": "{order Id}",
                "item": [
                  {
                    "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
                    "name": "Find purchase order by ID",
                    "request": {
                      "name": "Find purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of pet that needs to be fetched",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "GET"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "json"
                        },
                        "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                        "name": "successful operation",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "OK",
                        "code": 200,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "GET",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
                    "name": "Delete purchase order by ID",
                    "request": {
                      "name": "Delete purchase order by ID",
                      "description": {
                        "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                        "type": "text/plain"
                      },
                      "url": {
                        "path": [
                          "store",
                          "order",
                          ":orderId"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "description": {
                              "content": "(Required) ID of the order that needs to be deleted",
                              "type": "text/plain"
                            },
                            "type": "any",
                            "value": "<long>",
                            "key": "orderId"
                          }
                        ]
                      },
                      "method": "DELETE"
                    },
                    "response": [
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                        "name": "Invalid ID supplied",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Bad Request",
                        "code": 400,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      },
                      {
                        "_": {
                          "postman_previewlanguage": "text"
                        },
                        "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                        "name": "Order not found",
                        "originalRequest": {
                          "url": {
                            "path": [
                              "store",
                              "order",
                              ":orderId"
                            ],
                            "host": [
                              "{{baseUrl}}"
                            ],
                            "query": [],
                            "variable": [
                              {
                                "type": "any",
                                "key": "orderId"
                              }
                            ]
                          },
                          "method": "DELETE",
                          "body": {}
                        },
                        "status": "Not Found",
                        "code": 404,
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "text/plain"
                          }
                        ],
                        "body": "",
                        "cookie": []
                      }
                    ],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                          ],
                          "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          }
        ],
        "event": []
      },
      {
        "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
        "name": "user",
        "item": [
          {
            "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
            "name": "Create user",
            "request": {
              "name": "Create user",
              "description": {
                "content": "This can only be done by the logged in user.",
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "15dae29b-8521-44e2-b570-19df292bc443",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                }
              }
            ]
          },
          {
            "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithArray"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithArray"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                }
              }
            ]
          },
          {
            "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
            "name": "Creates list of users with given input array",
            "request": {
              "name": "Creates list of users with given input array",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "createWithList"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "*/*"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "createWithList"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                  }
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                  ],
                  "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                }
              }
            ]
          },
          {
            "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
            "name": "Logs user into the system",
            "request": {
              "name": "Logs user into the system",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "login"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [
                  {
                    "description": {
                      "content": "(Required) The user name for login",
                      "type": "text/plain"
                    },
                    "key": "username",
                    "value": "<string>"
                  },
                  {
                    "description": {
                      "content": "(Required) The password for login in clear text",
                      "type": "text/plain"
                    },
                    "key": "password",
                    "value": "<string>"
                  }
                ],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json"
                },
                "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "description": {
                      "content": "calls per hour allowed by the user",
                      "type": "text/plain"
                    },
                    "key": "X-Rate-Limit",
                    "value": "-64242167"
                  },
                  {
                    "description": {
                      "content": "date in UTC when token expires",
                      "type": "text/plain"
                    },
                    "key": "X-Expires-After",
                    "value": "dolor"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": "\"dolor\"",
                "cookie": []
              },
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                "name": "Invalid username/password supplied",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "login"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [
                      {
                        "key": "username",
                        "value": "<string>"
                      },
                      {
                        "key": "password",
                        "value": "<string>"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Bad Request",
                "code": 400,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                }
              }
            ]
          },
          {
            "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
            "name": "Logs out current logged in user session",
            "request": {
              "name": "Logs out current logged in user session",
              "description": {
                "type": "text/plain"
              },
              "url": {
                "path": [
                  "user",
                  "logout"
                ],
                "host": [
                  "{{baseUrl}}"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET"
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "text"
                },
                "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                "name": "successful operation",
                "originalRequest": {
                  "url": {
                    "path": [
                      "user",
                      "logout"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {}
                },
                "status": "Internal Server Error",
                "code": 500,
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "text/plain"
                  }
                ],
                "body": "",
                "cookie": []
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                  ],
                  "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                }
              }
            ]
          },
          {
            "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
            "name": "{username}",
            "item": [
              {
                "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                "name": "Get user by user name",
                "request": {
                  "name": "Get user by user name",
                  "description": {
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "GET"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "json"
                    },
                    "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                    "name": "successful operation",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "OK",
                    "code": 200,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "f379d179-b532-4991-b921-ba0b47124f57",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "GET",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                      ],
                      "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                    }
                  }
                ]
              },
              {
                "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                "name": "Updated user",
                "request": {
                  "name": "Updated user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) name that need to be updated",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "*/*"
                    }
                  ],
                  "method": "PUT",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                  }
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                    "name": "Invalid user supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "PUT",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                      }
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                    }
                  }
                ]
              },
              {
                "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                "name": "Delete user",
                "request": {
                  "name": "Delete user",
                  "description": {
                    "content": "This can only be done by the logged in user.",
                    "type": "text/plain"
                  },
                  "url": {
                    "path": [
                      "user",
                      ":username"
                    ],
                    "host": [
                      "{{baseUrl}}"
                    ],
                    "query": [],
                    "variable": [
                      {
                        "description": {
                          "content": "(Required) The name that needs to be deleted",
                          "type": "text/plain"
                        },
                        "type": "any",
                        "value": "<string>",
                        "key": "username"
                      }
                    ]
                  },
                  "method": "DELETE"
                },
                "response": [
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                    "name": "Invalid username supplied",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Bad Request",
                    "code": 400,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  },
                  {
                    "_": {
                      "postman_previewlanguage": "text"
                    },
                    "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                    "name": "User not found",
                    "originalRequest": {
                      "url": {
                        "path": [
                          "user",
                          ":username"
                        ],
                        "host": [
                          "{{baseUrl}}"
                        ],
                        "query": [],
                        "variable": [
                          {
                            "type": "any",
                            "key": "username"
                          }
                        ]
                      },
                      "method": "DELETE",
                      "body": {}
                    },
                    "status": "Not Found",
                    "code": 404,
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "text/plain"
                      }
                    ],
                    "body": "",
                    "cookie": []
                  }
                ],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9282df19-7d28-4173-a735-9cabfd853764",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                      ],
                      "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [
      {
        "id": "baseUrl",
        "type": "string",
        "value": "https://petstore.swagger.io/v2"
      }
    ],
    "info": {
      "_postman_id": "a276ee94-0b8b-4c1e-b292-04c8d111bb42",
      "name": "Swagger Petstore",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.\n\nContact Support:\n Email: apiteam@swagger.io",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "7b45f405-7cb0-49f3-ae57-f5104d3113d0",
    "values": []
  },
  "globals": {
    "id": "7acb93f2-5731-471a-8640-740dff35a7d1",
    "values": [
      {
        "type": "any",
        "value": "http://petstore.swagger.io/v2",
        "key": "baseUrl"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 20,
        "pending": 0,
        "failed": 20
      },
      "tests": {
        "total": 20,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 17,
        "pending": 0,
        "failed": 17
      },
      "testScripts": {
        "total": 20,
        "pending": 0,
        "failed": 3
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 0,
      "responseMin": 0,
      "responseMax": 0,
      "responseSd": 0,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1596533458460,
      "completed": 1596533464249
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "200953f9-5c8f-4b0d-84c8-3db2573db621",
          "httpRequestId": "f72f5a11-49ff-4b86-8793-7131491ea34b"
        },
        "item": {
          "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "41e28865-2165-47d0-997b-e82d6770b332",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
              }
            }
          ]
        },
        "request": {
          "name": "Update an existing pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "228310a4-6667-4bad-963d-def3ca290fe4",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ba8271bb-5ca5-40d5-bd89-3c55fbea9711",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c96645a-8ae4-4308-aa5a-97e6319962c3"
        },
        "item": {
          "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
              }
            }
          ]
        },
        "request": {
          "name": "Add a new pet to the store",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ba9f9839-d642-4a4d-ab4a-f824f19a0052",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 405",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 405",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "72b826b5-1c2b-4498-9682-5d4d3aa4fef0",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2e2b0cd1-93fa-48e7-9777-089e06b5c33c"
        },
        "item": {
          "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by status",
          "description": {
            "content": "Multiple status values can be provided with comma separated strings",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByStatus"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "status",
                "value": "available"
              },
              {
                "key": "status",
                "value": "available"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "bb7b9520-9bb7-4e35-acb6-385b6d2b0cfa",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "80dbdd1d-2658-42f0-bf02-1d66499d8774",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae6a1a04-8d63-4a4b-95b5-41e817843b4a"
        },
        "item": {
          "id": "74e221af-e493-408a-859e-23424ada3018",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
              }
            }
          ]
        },
        "request": {
          "name": "Finds Pets by tags",
          "description": {
            "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "findByTags"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              },
              {
                "key": "tags",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9326ab8c-101e-4ade-83f6-0828832610eb",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "74e221af-e493-408a-859e-23424ada3018",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b065fb28-9290-4ea0-b9b8-b3177f1e48b8",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "95802083-6245-49de-b183-3fd16c143e49"
        },
        "item": {
          "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
              }
            }
          ]
        },
        "request": {
          "name": "Find pet by ID",
          "description": {
            "content": "Returns a single pet",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f4c628d5-442f-403b-9fd9-2a1b669f9053",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "59ef5f2e-c696-400f-99b4-e8f8902261ac",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a192a3df-97a3-409c-a043-179df8cb29fa"
        },
        "item": {
          "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
              }
            }
          ]
        },
        "request": {
          "name": "Updates a pet in the store with form data",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "970d464f-cc67-49cf-9996-4081ea1a40b6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "description": {
                  "content": "Updated name of the pet",
                  "type": "text/plain"
                },
                "key": "name",
                "value": "<string>"
              },
              {
                "description": {
                  "content": "Updated status of the pet",
                  "type": "text/plain"
                },
                "key": "status",
                "value": "<string>"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0e58e629-727a-498a-8673-d0a1d3b40e32",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20fc0f74-4bb3-49f1-8bb6-9c0e3bd9fdf4"
        },
        "item": {
          "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
              }
            }
          ]
        },
        "request": {
          "name": "Deletes a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": "<string>"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6968393c-9b6b-42b7-9d1c-ff0a284a8cb6",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e60e2587-ba4d-437c-ac8c-abbcfaeba46d",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aff13a3b-fc9c-4155-9b65-57d79c793332"
        },
        "item": {
          "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
              }
            }
          ]
        },
        "request": {
          "name": "uploads an image",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "pet",
              "%3Clong%3E",
              "uploadImage"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "multipart/form-data"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f0f9e2e3-2213-4644-9702-cdfffb51b371",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "description": {
                  "content": "Additional data to pass to server",
                  "type": "text/plain"
                },
                "key": "additionalMetadata",
                "value": "<string>",
                "type": "text"
              },
              {
                "description": {
                  "content": "file to upload",
                  "type": "text/plain"
                },
                "key": "file",
                "value": "<binary>",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "oauth2",
            "oauth2": []
          }
        },
        "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6807b6a1-59b0-4798-9718-7bca919766d2",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6f12919-2954-4a12-af4c-7cae5cc05255"
        },
        "item": {
          "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"sint laborum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
              }
            }
          ]
        },
        "request": {
          "name": "Returns pet inventories by status",
          "description": {
            "content": "Returns a map of status codes to quantities",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "inventory"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "key": "api_key",
              "value": ""
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "53a705b3-afc0-4b11-a1f5-1e65015aca3a",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET",
          "auth": {
            "type": "noauth",
            "noauth": []
          }
        },
        "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "306caf4d-d020-4bd4-a4c5-aafa58730fd1",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4269f6fc-73bc-48e9-b510-7f689a608159"
        },
        "item": {
          "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
              }
            }
          ]
        },
        "request": {
          "name": "Place an order for a pet",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9f0841ee-f157-4edc-8471-43ac7c480ac8",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
          }
        },
        "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6a91c05e-51e3-42fe-948e-f5d09ece1a8d",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99ad7be0-47eb-4ddd-a1b0-39d8e3fef455"
        },
        "item": {
          "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "547432c8-cfe8-4250-bd82-820b8362e328",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e495977-f640-471c-ad0d-846afbcefde3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
              }
            }
          ]
        },
        "request": {
          "name": "Find purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6d8809f3-81fb-40a9-a72a-bcb71588dc43",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d47f4f67-e1da-45dd-85bb-e770e48daa06",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a738880-02b9-4d83-9603-46725c6830ea"
        },
        "item": {
          "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
              }
            }
          ]
        },
        "request": {
          "name": "Delete purchase order by ID",
          "description": {
            "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "store",
              "order",
              "%3Clong%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b1a71575-6f42-4586-b7b9-a5b60f3a9fba",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "70403a81-1d8c-4be9-9668-e6833b4647a1",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "692019d5-68a3-4fb4-bf87-7abd9120fbf2"
        },
        "item": {
          "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15dae29b-8521-44e2-b570-19df292bc443",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
              }
            }
          ]
        },
        "request": {
          "name": "Create user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "783731c8-3443-46a7-809b-f1dbf1394e16",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "79261f49-0def-4725-aa9a-9665db482d64",
              "timestamp": 1596533462530,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e799268a-9742-44e0-9440-eb0a9aa7aa6f",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9941696-205c-4474-b159-f9b310399628"
        },
        "item": {
          "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithArray"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "08163360-d997-46ab-b0e6-f978f8037e27",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "419377ad-02be-4c56-894a-16a22890e2a6",
              "timestamp": 1596533462774,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "354b21ee-033a-4576-9bf5-2501617f67f9",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ebca21c-35bf-43d1-a9e7-93ac5cf93b1b"
        },
        "item": {
          "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
              }
            }
          ]
        },
        "request": {
          "name": "Creates list of users with given input array",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "createWithList"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8beb0817-d911-4cf8-b5af-364b1a9a2e98",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
          }
        },
        "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "testScript": [
          {
            "error": {
              "type": "Error",
              "name": "SyntaxError",
              "message": "Unexpected token 'default'",
              "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
              "id": "7a5b7a90-1729-49fd-8b6a-f78b458f69bb",
              "timestamp": 1596533463018,
              "stacktrace": []
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "07031763-f295-46c5-97db-9b8638ad5604",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "674c1681-7f97-4d39-a3f4-e023d0919b5f"
        },
        "item": {
          "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-64242167"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "dolor"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"dolor\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
              }
            }
          ]
        },
        "request": {
          "name": "Logs user into the system",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "login"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [
              {
                "key": "username",
                "value": "%3Cstring%3E"
              },
              {
                "key": "password",
                "value": "%3Cstring%3E"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1abcd076-44fb-4eba-ab97-f465cfd7a7cb",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff6c4092-c4cf-49c1-96be-f9ef38001177",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a76ee246-d873-4a9a-b8c4-7f44cced4897"
        },
        "item": {
          "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
              }
            }
          ]
        },
        "request": {
          "name": "Logs out current logged in user session",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "logout"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3590de02-a45e-41d6-99a4-aac6008fa164",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is null",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is null",
              "message": "expected response to have status reason null but got undefined",
              "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e8ed9122-ef07-4916-8028-555ed0562e67",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed847a7e-ef19-42e2-8450-e913838a1e36"
        },
        "item": {
          "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f379d179-b532-4991-b921-ba0b47124f57",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
              }
            }
          ]
        },
        "request": {
          "name": "Get user by user name",
          "description": {
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a87742a2-5e81-47bd-8833-0f34d9982156",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "3acfc684-4801-4a76-ae46-dffc98b677e9",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9b13071-7d3b-47b7-9ac4-0435204da820"
        },
        "item": {
          "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
              }
            }
          ]
        },
        "request": {
          "name": "Updated user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "*/*"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "cad81374-fd78-40c1-9749-e982b232e7c0",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
          }
        },
        "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "634211e5-43a9-414f-8958-cce771503e9a",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a09d5284-1ceb-4f8b-a735-80961725ff7a"
        },
        "item": {
          "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9282df19-7d28-4173-a735-9cabfd853764",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
              }
            }
          ]
        },
        "request": {
          "name": "Delete user",
          "description": {
            "content": "This can only be done by the logged in user.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "http",
            "path": [
              "v2",
              "user",
              "%3Cstring%3E"
            ],
            "host": [
              "petstore",
              "swagger",
              "io"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e4aba2c9-24f8-4952-bf5a-3ac47187b3c9",
              "system": true
            },
            {
              "key": "Host",
              "value": "petstore.swagger.io",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
        "requestError": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN"
        },
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 400",
              "message": "expected { Object (id, _details, ...) } to have property 'code'",
              "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 0
    },
    "failures": [
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "c756817e-eb71-40bd-8dce-7cb1c8a173c9",
          "timestamp": 1596533459053,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "41e28865-2165-47d0-997b-e82d6770b332",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "200953f9-5c8f-4b0d-84c8-3db2573db621",
          "httpRequestId": "f72f5a11-49ff-4b86-8793-7131491ea34b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:1)",
          "checksum": "85ff1c86bc688d3966ec6090a7b0d321",
          "id": "6aa38aa0-4f5b-4174-a70d-69b69d9252ae",
          "timestamp": 1596533459079,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
          "name": "Update an existing pet",
          "request": {
            "name": "Update an existing pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "41e28865-2165-47d0-997b-e82d6770b332",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
              "name": "Validation exception",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 20,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "200953f9-5c8f-4b0d-84c8-3db2573db621",
          "httpRequestId": "f72f5a11-49ff-4b86-8793-7131491ea34b",
          "scriptId": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
          "execution": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "7cfa79f6-9314-446f-959b-40b6711771d2",
          "timestamp": 1596533459617,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ba8271bb-5ca5-40d5-bd89-3c55fbea9711",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c96645a-8ae4-4308-aa5a-97e6319962c3"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 405",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:2)",
          "checksum": "497539ef15e2cb4b88e23d6ee7bd4863",
          "id": "52649d8e-9c62-4f9d-ac2b-20f716c12690",
          "timestamp": 1596533459626,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
          "name": "Add a new pet to the store",
          "request": {
            "name": "Add a new pet to the store",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                ],
                "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ba8271bb-5ca5-40d5-bd89-3c55fbea9711",
          "length": 20,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c96645a-8ae4-4308-aa5a-97e6319962c3",
          "scriptId": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
          "execution": "6f274e2d-b835-4a3c-a14b-8f7564023249"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "26ca1a84-c2c3-4a32-8abd-d81d603a2044",
          "timestamp": 1596533459998,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "72b826b5-1c2b-4498-9682-5d4d3aa4fef0",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2e2b0cd1-93fa-48e7-9777-089e06b5c33c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "9de577dff71de30db258f6e6486cf387",
          "id": "bfecbc3b-f2f5-446d-9bf2-ad9dc000a83d",
          "timestamp": 1596533460008,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
          "name": "Finds Pets by status",
          "request": {
            "name": "Finds Pets by status",
            "description": {
              "content": "Multiple status values can be provided with comma separated strings",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByStatus"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                },
                {
                  "description": {
                    "content": "(Required) Status values that need to be considered for filter",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "available"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
              "name": "Invalid status value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "72b826b5-1c2b-4498-9682-5d4d3aa4fef0",
          "length": 20,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2e2b0cd1-93fa-48e7-9777-089e06b5c33c",
          "scriptId": "bc5026ab-79c7-42cb-9508-474286ae2103",
          "execution": "18197db8-9299-42bd-ac51-c19fb277f02c"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "eb7a7a23-039f-4af8-aea5-58d64b89c5a4",
          "timestamp": 1596533460257,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "74e221af-e493-408a-859e-23424ada3018",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "80dbdd1d-2658-42f0-bf02-1d66499d8774",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae6a1a04-8d63-4a4b-95b5-41e817843b4a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:4)",
          "checksum": "a4f60c640f07b02d0fd2d60a737d3a01",
          "id": "f9142a42-346c-4e5e-8633-181855c551b9",
          "timestamp": 1596533460262,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "74e221af-e493-408a-859e-23424ada3018",
          "name": "Finds Pets by tags",
          "request": {
            "name": "Finds Pets by tags",
            "description": {
              "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                "findByTags"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) Tags to filter by",
                    "type": "text/plain"
                  },
                  "key": "tags",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
              "name": "Invalid tag value",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
              }
            }
          ]
        },
        "parent": {
          "id": "ec1e3c22-6012-4ec0-928d-8730ada0f7c4",
          "name": "pet",
          "item": [
            {
              "id": "901693e6-e2cd-4923-a8ee-f35554ec523a",
              "name": "Update an existing pet",
              "request": {
                "name": "Update an existing pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "41e28865-2165-47d0-997b-e82d6770b332",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "beb73ffc-f3fe-4676-a85e-93fa680a51d9",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "ee21cbd2-8552-49d3-ab18-1eb956597078",
                  "name": "Validation exception",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f7db10c3-fba9-422c-b7f4-f23961c1c551",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "78a8db65-2d9f-41ef-ab82-26735d3c3cf2"
                  }
                }
              ]
            },
            {
              "id": "fa2e347a-09f6-4a06-b0c7-4d8aa18b7e1d",
              "name": "Add a new pet to the store",
              "request": {
                "name": "Add a new pet to the store",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1ccb0e89-2951-458b-ac43-6dc2a85b4276",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n    },\n    \"tags\": [\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        },\n        {\n            \"id\": \"<long>\",\n            \"name\": \"<string>\"\n        }\n    ],\n    \"status\": \"<string>\"\n}"
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9dc7a129-d782-48d7-adb1-accb9d054c5d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 405\", function () {pm.response.to.have.status(405);});"
                    ],
                    "_lastExecutionId": "6f274e2d-b835-4a3c-a14b-8f7564023249"
                  }
                }
              ]
            },
            {
              "id": "05eb9af6-447b-45e7-a745-7be87512d7a3",
              "name": "Finds Pets by status",
              "request": {
                "name": "Finds Pets by status",
                "description": {
                  "content": "Multiple status values can be provided with comma separated strings",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByStatus"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    },
                    {
                      "description": {
                        "content": "(Required) Status values that need to be considered for filter",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "available"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "f10ccbd3-0504-4751-bb3c-25080fda18dd",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dc4fcd4b-450b-455e-bab9-88e89075e125",
                  "name": "Invalid status value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByStatus"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "status",
                          "value": "available"
                        },
                        {
                          "key": "status",
                          "value": "available"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "bc5026ab-79c7-42cb-9508-474286ae2103",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "18197db8-9299-42bd-ac51-c19fb277f02c"
                  }
                }
              ]
            },
            {
              "id": "74e221af-e493-408a-859e-23424ada3018",
              "name": "Finds Pets by tags",
              "request": {
                "name": "Finds Pets by tags",
                "description": {
                  "content": "Muliple tags can be provided with comma separated strings. Use         tag1, tag2, tag3 for testing.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    "findByTags"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) Tags to filter by",
                        "type": "text/plain"
                      },
                      "key": "tags",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "b6551ee6-5d73-46b2-92e6-be1650e834db",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "[\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n },\n {\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n   \"<string>\",\n   \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  \"tags\": [\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   },\n   {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n   }\n  ],\n  \"status\": \"<string>\"\n }\n]",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4979d56c-fd53-44c2-b0b8-0eafe1447d25",
                  "name": "Invalid tag value",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        "findByTags"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "tags",
                          "value": "<string>"
                        },
                        {
                          "key": "tags",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
                  }
                }
              ]
            },
            {
              "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
              "name": "{pet Id}",
              "item": [
                {
                  "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
                  "name": "Find pet by ID",
                  "request": {
                    "name": "Find pet by ID",
                    "description": {
                      "content": "Returns a single pet",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to return",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": ""
                      }
                    ],
                    "method": "GET",
                    "auth": {
                      "type": "noauth",
                      "noauth": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                      }
                    }
                  ]
                },
                {
                  "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
                  "name": "Updates a pet in the store with form data",
                  "request": {
                    "name": "Updates a pet in the store with form data",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/x-www-form-urlencoded"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                      "name": "Invalid input",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "urlencoded",
                          "urlencoded": [
                            {
                              "description": {
                                "content": "Updated name of the pet",
                                "type": "text/plain"
                              },
                              "key": "name",
                              "value": "<string>"
                            },
                            {
                              "description": {
                                "content": "Updated status of the pet",
                                "type": "text/plain"
                              },
                              "key": "status",
                              "value": "<string>"
                            }
                          ]
                        }
                      },
                      "status": "Method Not Allowed",
                      "code": 405,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                      }
                    }
                  ]
                },
                {
                  "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
                  "name": "Deletes a pet",
                  "request": {
                    "name": "Deletes a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) Pet id to delete",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                      "name": "Pet not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "header": [
                          {
                            "description": {
                              "content": "",
                              "type": "text/plain"
                            },
                            "key": "api_key",
                            "value": "<string>"
                          }
                        ],
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                      }
                    }
                  ]
                },
                {
                  "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
                  "name": "uploads an image",
                  "request": {
                    "name": "uploads an image",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet to update",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    },
                    "auth": {
                      "type": "oauth2",
                      "oauth2": []
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "pet",
                            ":petId",
                            "uploadImage"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "petId"
                            }
                          ]
                        },
                        "method": "POST",
                        "body": {
                          "mode": "formdata",
                          "formdata": [
                            {
                              "description": {
                                "content": "Additional data to pass to server",
                                "type": "text/plain"
                              },
                              "key": "additionalMetadata",
                              "value": "<string>",
                              "type": "text"
                            },
                            {
                              "description": {
                                "content": "file to upload",
                                "type": "text/plain"
                              },
                              "key": "file",
                              "value": "<binary>",
                              "type": "text"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "80dbdd1d-2658-42f0-bf02-1d66499d8774",
          "length": 20,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ae6a1a04-8d63-4a4b-95b5-41e817843b4a",
          "scriptId": "0b6ac5cb-62cc-4d0a-a8a1-e238b376ee7d",
          "execution": "aa332b18-bc09-45e8-8eaa-96e99813e4a8"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "74c01c53-d513-4d5b-8c71-5b1819917b8f",
          "timestamp": 1596533460507,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b065fb28-9290-4ea0-b9b8-b3177f1e48b8",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "95802083-6245-49de-b183-3fd16c143e49"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:5)",
          "checksum": "973a8a624d47a6ce4f2d284508a75218",
          "id": "ee8b477a-ee24-4093-ae7a-85f3fe97a009",
          "timestamp": 1596533460515,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
          "name": "Find pet by ID",
          "request": {
            "name": "Find pet by ID",
            "description": {
              "content": "Returns a single pet",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to return",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "b065fb28-9290-4ea0-b9b8-b3177f1e48b8",
          "length": 20,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "95802083-6245-49de-b183-3fd16c143e49",
          "scriptId": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
          "execution": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "61b3655d-93c1-40cc-9e49-b87fc3c8eb80",
          "timestamp": 1596533460769,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "59ef5f2e-c696-400f-99b4-e8f8902261ac",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a192a3df-97a3-409c-a043-179df8cb29fa"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:6)",
          "checksum": "e80ed07240705f473c39b64429fff707",
          "id": "93803cf4-56b6-4511-ac32-ada08eab21a9",
          "timestamp": 1596533460777,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
          "name": "Updates a pet in the store with form data",
          "request": {
            "name": "Updates a pet in the store with form data",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "description": {
                    "content": "Updated name of the pet",
                    "type": "text/plain"
                  },
                  "key": "name",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "Updated status of the pet",
                    "type": "text/plain"
                  },
                  "key": "status",
                  "value": "<string>"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
              "name": "Invalid input",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                }
              },
              "status": "Method Not Allowed",
              "code": 405,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "59ef5f2e-c696-400f-99b4-e8f8902261ac",
          "length": 20,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a192a3df-97a3-409c-a043-179df8cb29fa",
          "scriptId": "b87cb50a-61bc-4a73-be18-1102d1a46950",
          "execution": "666a8634-1da7-4bae-bbea-dd479ff758cd"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "67abfed7-fe11-4161-802e-3be6a7312ce5",
          "timestamp": 1596533461017,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0e58e629-727a-498a-8673-d0a1d3b40e32",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20fc0f74-4bb3-49f1-8bb6-9c0e3bd9fdf4"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:7)",
          "checksum": "0c034fabbdfc9ea060501c07e1911380",
          "id": "4ba029ae-68d7-4be9-bddb-7106b50b0431",
          "timestamp": 1596533461024,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
          "name": "Deletes a pet",
          "request": {
            "name": "Deletes a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) Pet id to delete",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": "<string>"
              }
            ],
            "method": "DELETE",
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
              "name": "Pet not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "0e58e629-727a-498a-8673-d0a1d3b40e32",
          "length": 20,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20fc0f74-4bb3-49f1-8bb6-9c0e3bd9fdf4",
          "scriptId": "9d573d83-0bfe-488e-9aff-046a4acb4072",
          "execution": "a7dadbab-581d-49d7-a8f8-b305effdc289"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "fe6496d7-9680-42f2-957c-f1e08112620d",
          "timestamp": 1596533461263,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e60e2587-ba4d-437c-ac8c-abbcfaeba46d",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aff13a3b-fc9c-4155-9b65-57d79c793332"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:8)",
          "checksum": "d959e0276ee3bc5ad25a0c9642e0d785",
          "id": "d310d396-db77-4c53-86cf-a396f54a187e",
          "timestamp": 1596533461271,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
          "name": "uploads an image",
          "request": {
            "name": "uploads an image",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "pet",
                ":petId",
                "uploadImage"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet to update",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "petId"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "description": {
                    "content": "Additional data to pass to server",
                    "type": "text/plain"
                  },
                  "key": "additionalMetadata",
                  "value": "<string>",
                  "type": "text"
                },
                {
                  "description": {
                    "content": "file to upload",
                    "type": "text/plain"
                  },
                  "key": "file",
                  "value": "<binary>",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth2",
              "oauth2": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "petId"
                    }
                  ]
                },
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
              }
            }
          ]
        },
        "parent": {
          "id": "169844ba-e521-4cea-9283-1ded52ec35d5",
          "name": "{pet Id}",
          "item": [
            {
              "id": "5f70af0f-646b-4d6f-9f48-b8dd49c63b13",
              "name": "Find pet by ID",
              "request": {
                "name": "Find pet by ID",
                "description": {
                  "content": "Returns a single pet",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to return",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5420a9da-a2b2-4abb-8d1e-1ecbb8e05f46",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"name\": \"doggie\",\n \"photoUrls\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"id\": \"<long>\",\n \"category\": {\n  \"id\": \"<long>\",\n  \"name\": \"<string>\"\n },\n \"tags\": [\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  },\n  {\n   \"id\": \"<long>\",\n   \"name\": \"<string>\"\n  }\n ],\n \"status\": \"<string>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5b74d3f1-6a9e-473c-b4ed-3aa64f5653a2",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "c96d2b1a-ef64-4424-a3b4-5e0f94334bf8",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92927337-17ef-4297-b1c0-6e83e3fd20b0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "77664e8e-dc04-4aaf-a314-9673361fbd8a"
                  }
                }
              ]
            },
            {
              "id": "97c9f414-0a60-40ff-ba97-beb3f6a6cbf0",
              "name": "Updates a pet in the store with form data",
              "request": {
                "name": "Updates a pet in the store with form data",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/x-www-form-urlencoded"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "urlencoded",
                  "urlencoded": [
                    {
                      "description": {
                        "content": "Updated name of the pet",
                        "type": "text/plain"
                      },
                      "key": "name",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "Updated status of the pet",
                        "type": "text/plain"
                      },
                      "key": "status",
                      "value": "<string>"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "d088d07c-ac18-4de0-a3f8-4df97d1111ce",
                  "name": "Invalid input",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "urlencoded",
                      "urlencoded": [
                        {
                          "description": {
                            "content": "Updated name of the pet",
                            "type": "text/plain"
                          },
                          "key": "name",
                          "value": "<string>"
                        },
                        {
                          "description": {
                            "content": "Updated status of the pet",
                            "type": "text/plain"
                          },
                          "key": "status",
                          "value": "<string>"
                        }
                      ]
                    }
                  },
                  "status": "Method Not Allowed",
                  "code": 405,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b87cb50a-61bc-4a73-be18-1102d1a46950",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "666a8634-1da7-4bae-bbea-dd479ff758cd"
                  }
                }
              ]
            },
            {
              "id": "b2737b2f-63a9-4da3-9b7d-0f9702d109ab",
              "name": "Deletes a pet",
              "request": {
                "name": "Deletes a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) Pet id to delete",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": "<string>"
                  }
                ],
                "method": "DELETE",
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "96bb6dfc-7c6d-47d7-a947-01b7027d2478",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1fb4d4b5-efe0-4bea-bed5-e858d2018ec3",
                  "name": "Pet not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "header": [
                      {
                        "description": {
                          "content": "",
                          "type": "text/plain"
                        },
                        "key": "api_key",
                        "value": "<string>"
                      }
                    ],
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9d573d83-0bfe-488e-9aff-046a4acb4072",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a7dadbab-581d-49d7-a8f8-b305effdc289"
                  }
                }
              ]
            },
            {
              "id": "b128c064-e008-4f18-b2ba-6f2f4bf96aae",
              "name": "uploads an image",
              "request": {
                "name": "uploads an image",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "pet",
                    ":petId",
                    "uploadImage"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet to update",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "petId"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "multipart/form-data"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "description": {
                        "content": "Additional data to pass to server",
                        "type": "text/plain"
                      },
                      "key": "additionalMetadata",
                      "value": "<string>",
                      "type": "text"
                    },
                    {
                      "description": {
                        "content": "file to upload",
                        "type": "text/plain"
                      },
                      "key": "file",
                      "value": "<binary>",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth2",
                  "oauth2": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "76ec873c-f8dd-497c-83eb-0098e2a3177e",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "pet",
                        ":petId",
                        "uploadImage"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "petId"
                        }
                      ]
                    },
                    "method": "POST",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "description": {
                            "content": "Additional data to pass to server",
                            "type": "text/plain"
                          },
                          "key": "additionalMetadata",
                          "value": "<string>",
                          "type": "text"
                        },
                        {
                          "description": {
                            "content": "file to upload",
                            "type": "text/plain"
                          },
                          "key": "file",
                          "value": "<binary>",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"code\": 4769839,\n \"type\": \"ut adipisicing commodo\",\n \"message\": \"fugiat cupidatat aliquip\"\n}",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "a09c6b11-e929-486d-883b-f56594ec3bb5"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e60e2587-ba4d-437c-ac8c-abbcfaeba46d",
          "length": 20,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "aff13a3b-fc9c-4155-9b65-57d79c793332",
          "scriptId": "e7c3c01d-7bf9-41e1-be7b-f3cea66d8745",
          "execution": "a09c6b11-e929-486d-883b-f56594ec3bb5"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "245bbc79-63bf-45a0-81e9-56832b5a3171",
          "timestamp": 1596533461523,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"sint laborum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
              }
            }
          ]
        },
        "parent": {
          "id": "b93c4fcd-d48e-40bb-a335-8b96f3db21f0",
          "name": "store",
          "item": [
            {
              "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"sint laborum\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
                  }
                }
              ]
            },
            {
              "id": "24a71cbd-f742-40cb-9a17-162b6863024b",
              "name": "order",
              "item": [
                {
                  "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
                      }
                    }
                  ]
                },
                {
                  "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                          }
                        }
                      ]
                    },
                    {
                      "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6807b6a1-59b0-4798-9718-7bca919766d2",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6f12919-2954-4a12-af4c-7cae5cc05255"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:9)",
          "checksum": "0d1e1602368a011911e90768e4192adc",
          "id": "4a958314-3214-4783-8be6-6c95958e87de",
          "timestamp": 1596533461530,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
          "name": "Returns pet inventories by status",
          "request": {
            "name": "Returns pet inventories by status",
            "description": {
              "content": "Returns a map of status codes to quantities",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "inventory"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "api_key",
                "value": ""
              }
            ],
            "method": "GET",
            "auth": {
              "type": "noauth",
              "noauth": []
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"sint laborum\"",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
              }
            }
          ]
        },
        "parent": {
          "id": "b93c4fcd-d48e-40bb-a335-8b96f3db21f0",
          "name": "store",
          "item": [
            {
              "id": "af949b84-8b55-49eb-bd50-2c4d43216932",
              "name": "Returns pet inventories by status",
              "request": {
                "name": "Returns pet inventories by status",
                "description": {
                  "content": "Returns a map of status codes to quantities",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "inventory"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "api_key",
                    "value": ""
                  }
                ],
                "method": "GET",
                "auth": {
                  "type": "noauth",
                  "noauth": []
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "3c605619-2060-49e4-bec9-f1ddbc210616",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "inventory"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"sint laborum\"",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0955ecae-860f-402e-844c-f7fd5374f6bf",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
                  }
                }
              ]
            },
            {
              "id": "24a71cbd-f742-40cb-9a17-162b6863024b",
              "name": "order",
              "item": [
                {
                  "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
                  "name": "Place an order for a pet",
                  "request": {
                    "name": "Place an order for a pet",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
                      "name": "Invalid Order",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": []
                        },
                        "method": "POST",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
                      }
                    }
                  ]
                },
                {
                  "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
                  "name": "{order Id}",
                  "item": [
                    {
                      "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
                      "name": "Find purchase order by ID",
                      "request": {
                        "name": "Find purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of pet that needs to be fetched",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "json"
                          },
                          "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                          "name": "successful operation",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "OK",
                          "code": 200,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "application/json"
                            }
                          ],
                          "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "GET",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                          }
                        }
                      ]
                    },
                    {
                      "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
                      "name": "Delete purchase order by ID",
                      "request": {
                        "name": "Delete purchase order by ID",
                        "description": {
                          "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                          "type": "text/plain"
                        },
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "description": {
                                "content": "(Required) ID of the order that needs to be deleted",
                                "type": "text/plain"
                              },
                              "type": "any",
                              "value": "<long>",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE"
                      },
                      "response": [
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                          "name": "Invalid ID supplied",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        },
                        {
                          "_": {
                            "postman_previewlanguage": "text"
                          },
                          "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                          "name": "Order not found",
                          "originalRequest": {
                            "url": {
                              "path": [
                                "store",
                                "order",
                                ":orderId"
                              ],
                              "host": [
                                "{{baseUrl}}"
                              ],
                              "query": [],
                              "variable": [
                                {
                                  "type": "any",
                                  "key": "orderId"
                                }
                              ]
                            },
                            "method": "DELETE",
                            "body": {}
                          },
                          "status": "Not Found",
                          "code": 404,
                          "header": [
                            {
                              "key": "Content-Type",
                              "value": "text/plain"
                            }
                          ],
                          "body": "",
                          "cookie": []
                        }
                      ],
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                            ],
                            "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                          }
                        }
                      ]
                    }
                  ],
                  "event": []
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6807b6a1-59b0-4798-9718-7bca919766d2",
          "length": 20,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c6f12919-2954-4a12-af4c-7cae5cc05255",
          "scriptId": "0955ecae-860f-402e-844c-f7fd5374f6bf",
          "execution": "4befbf5f-dc6f-4ef7-bd4c-2a00d1f6830e"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "c297cde6-227c-4432-afc5-318fee1dc8f8",
          "timestamp": 1596533461784,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
              }
            }
          ]
        },
        "parent": {
          "id": "24a71cbd-f742-40cb-9a17-162b6863024b",
          "name": "order",
          "item": [
            {
              "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
                  }
                }
              ]
            },
            {
              "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
              "name": "{order Id}",
              "item": [
                {
                  "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                      }
                    }
                  ]
                },
                {
                  "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "306caf4d-d020-4bd4-a4c5-aafa58730fd1",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4269f6fc-73bc-48e9-b510-7f689a608159"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:10)",
          "checksum": "664ae328d7ced97074a641d349fcd479",
          "id": "862a87ab-aa66-4c70-a287-6e2fc7fce043",
          "timestamp": 1596533461791,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
          "name": "Place an order for a pet",
          "request": {
            "name": "Place an order for a pet",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
              "name": "Invalid Order",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
              }
            }
          ]
        },
        "parent": {
          "id": "24a71cbd-f742-40cb-9a17-162b6863024b",
          "name": "order",
          "item": [
            {
              "id": "f4eb4d18-17df-429c-af06-da4b2165edcb",
              "name": "Place an order for a pet",
              "request": {
                "name": "Place an order for a pet",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "6be40e5b-80ca-4087-9932-ede209a1db35",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "5e9d7299-fbbb-4e80-ae23-63bdc1638352",
                  "name": "Invalid Order",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"petId\": \"<long>\",\n    \"quantity\": \"<integer>\",\n    \"shipDate\": \"<dateTime>\",\n    \"status\": \"<string>\",\n    \"complete\": false\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "26224377-cee2-4c2d-94d7-3e4752ee9189"
                  }
                }
              ]
            },
            {
              "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
              "name": "{order Id}",
              "item": [
                {
                  "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
                  "name": "Find purchase order by ID",
                  "request": {
                    "name": "Find purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of pet that needs to be fetched",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                      }
                    }
                  ]
                },
                {
                  "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
                  "name": "Delete purchase order by ID",
                  "request": {
                    "name": "Delete purchase order by ID",
                    "description": {
                      "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) ID of the order that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<long>",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                      "name": "Invalid ID supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                      "name": "Order not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "store",
                            "order",
                            ":orderId"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "orderId"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                        ],
                        "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "306caf4d-d020-4bd4-a4c5-aafa58730fd1",
          "length": 20,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4269f6fc-73bc-48e9-b510-7f689a608159",
          "scriptId": "1313d50d-dac6-4016-bf40-1adf8bde61b8",
          "execution": "26224377-cee2-4c2d-94d7-3e4752ee9189"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "65b578be-1b13-4380-a540-9c040acbae4c",
          "timestamp": 1596533462029,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "547432c8-cfe8-4250-bd82-820b8362e328",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e495977-f640-471c-ad0d-846afbcefde3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
              }
            }
          ]
        },
        "parent": {
          "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
          "name": "{order Id}",
          "item": [
            {
              "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                  }
                }
              ]
            },
            {
              "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6a91c05e-51e3-42fe-948e-f5d09ece1a8d",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99ad7be0-47eb-4ddd-a1b0-39d8e3fef455"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:11)",
          "checksum": "98f097503fe3f2041833585404f05c45",
          "id": "18e43d28-23ac-4162-ba7e-1883e4ee640c",
          "timestamp": 1596533462036,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
          "name": "Find purchase order by ID",
          "request": {
            "name": "Find purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of pet that needs to be fetched",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "547432c8-cfe8-4250-bd82-820b8362e328",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "9e495977-f640-471c-ad0d-846afbcefde3",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
              }
            }
          ]
        },
        "parent": {
          "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
          "name": "{order Id}",
          "item": [
            {
              "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                  }
                }
              ]
            },
            {
              "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "6a91c05e-51e3-42fe-948e-f5d09ece1a8d",
          "length": 20,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "99ad7be0-47eb-4ddd-a1b0-39d8e3fef455",
          "scriptId": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
          "execution": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "96462a8c-6010-47b8-a6d9-58d1564261e6",
          "timestamp": 1596533462279,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
              }
            }
          ]
        },
        "parent": {
          "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
          "name": "{order Id}",
          "item": [
            {
              "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                  }
                }
              ]
            },
            {
              "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d47f4f67-e1da-45dd-85bb-e770e48daa06",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a738880-02b9-4d83-9603-46725c6830ea"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "bb0d64c1b1a9f4ee431c9efc2e03cfb1",
          "id": "d27557e7-f7ad-4118-841f-b9f36a880e44",
          "timestamp": 1596533462284,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
          "name": "Delete purchase order by ID",
          "request": {
            "name": "Delete purchase order by ID",
            "description": {
              "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "store",
                "order",
                ":orderId"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) ID of the order that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<long>",
                  "key": "orderId"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
              "name": "Invalid ID supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
              "name": "Order not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
              }
            }
          ]
        },
        "parent": {
          "id": "292c6f37-e1be-4530-9b32-0b3f3c386dd3",
          "name": "{order Id}",
          "item": [
            {
              "id": "70328a6e-a526-42fc-9f74-cac34e9833aa",
              "name": "Find purchase order by ID",
              "request": {
                "name": "Find purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of pet that needs to be fetched",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "ba299c3a-d320-4cb7-826b-a718c1ce895c",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"petId\": \"<long>\",\n \"quantity\": \"<integer>\",\n \"shipDate\": \"<dateTime>\",\n \"status\": \"<string>\",\n \"complete\": false\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "547432c8-cfe8-4250-bd82-820b8362e328",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "9e495977-f640-471c-ad0d-846afbcefde3",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ec7fdba0-43f2-4ab1-9849-1c1e60650f34",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "6f6b1442-f504-4e0a-b7ff-2f9c1e008d86"
                  }
                }
              ]
            },
            {
              "id": "94a7f84b-f537-4ed2-b399-39ee52db5697",
              "name": "Delete purchase order by ID",
              "request": {
                "name": "Delete purchase order by ID",
                "description": {
                  "content": "For valid response try integer IDs with positive integer value.         Negative or non-integer values will generate API errors",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "store",
                    "order",
                    ":orderId"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) ID of the order that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<long>",
                      "key": "orderId"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "24ee6e5c-399d-4349-ae97-94ac0923353a",
                  "name": "Invalid ID supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4629b45b-4527-4be8-bda7-776c40e69abc",
                  "name": "Order not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "store",
                        "order",
                        ":orderId"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "orderId"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4dce5979-455c-46fa-99ef-13bff05ad331",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "d47f4f67-e1da-45dd-85bb-e770e48daa06",
          "length": 20,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a738880-02b9-4d83-9603-46725c6830ea",
          "scriptId": "4dce5979-455c-46fa-99ef-13bff05ad331",
          "execution": "70db9fdb-7f51-4e57-aeaf-66a1f016e054"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "fe2d11c5-0b03-4101-a3bf-bf74fa1f40c4",
          "timestamp": 1596533462522,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15dae29b-8521-44e2-b570-19df292bc443",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "70403a81-1d8c-4be9-9668-e6833b4647a1",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "692019d5-68a3-4fb4-bf87-7abd9120fbf2"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "79261f49-0def-4725-aa9a-9665db482d64",
          "timestamp": 1596533462530,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
          "name": "Create user",
          "request": {
            "name": "Create user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15dae29b-8521-44e2-b570-19df292bc443",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "70403a81-1d8c-4be9-9668-e6833b4647a1",
          "length": 20,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "692019d5-68a3-4fb4-bf87-7abd9120fbf2",
          "scriptId": "15dae29b-8521-44e2-b570-19df292bc443"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "2a92a257-573a-4838-aeeb-7d26682ebbe4",
          "timestamp": 1596533462767,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e799268a-9742-44e0-9440-eb0a9aa7aa6f",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9941696-205c-4474-b159-f9b310399628"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "419377ad-02be-4c56-894a-16a22890e2a6",
          "timestamp": 1596533462774,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithArray"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e799268a-9742-44e0-9440-eb0a9aa7aa6f",
          "length": 20,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c9941696-205c-4474-b159-f9b310399628",
          "scriptId": "e69ce244-72c0-4816-b208-303ef77cd4dc"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "72716de3-8c05-41d4-bcde-c10b61a406ca",
          "timestamp": 1596533463013,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "354b21ee-033a-4576-9bf5-2501617f67f9",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ebca21c-35bf-43d1-a9e7-93ac5cf93b1b"
        }
      },
      {
        "error": {
          "type": "Error",
          "name": "SyntaxError",
          "message": "Unexpected token 'default'",
          "checksum": "edc09d0af31b740b43d94badf0e1a3f2",
          "id": "7a5b7a90-1729-49fd-8b6a-f78b458f69bb",
          "timestamp": 1596533463018,
          "stacktrace": []
        },
        "at": "test-script",
        "source": {
          "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
          "name": "Creates list of users with given input array",
          "request": {
            "name": "Creates list of users with given input array",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "createWithList"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                ],
                "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "354b21ee-033a-4576-9bf5-2501617f67f9",
          "length": 20,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4ebca21c-35bf-43d1-a9e7-93ac5cf93b1b",
          "scriptId": "b337f720-7535-4e6a-91fe-1dbefdcfefb9"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "c53cfef1-9cbc-4628-b1f4-8027ef733373",
          "timestamp": 1596533463255,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-64242167"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "dolor"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"dolor\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "07031763-f295-46c5-97db-9b8638ad5604",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "674c1681-7f97-4d39-a3f4-e023d0919b5f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:16)",
          "checksum": "de4d3c9272aa76cb3163a01dcfbfdc74",
          "id": "ebe28a3a-9bd4-4ab5-b2dc-0d3e67a13662",
          "timestamp": 1596533463261,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 16,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
          "name": "Logs user into the system",
          "request": {
            "name": "Logs user into the system",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "login"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [
                {
                  "description": {
                    "content": "(Required) The user name for login",
                    "type": "text/plain"
                  },
                  "key": "username",
                  "value": "<string>"
                },
                {
                  "description": {
                    "content": "(Required) The password for login in clear text",
                    "type": "text/plain"
                  },
                  "key": "password",
                  "value": "<string>"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "description": {
                    "content": "calls per hour allowed by the user",
                    "type": "text/plain"
                  },
                  "key": "X-Rate-Limit",
                  "value": "-64242167"
                },
                {
                  "description": {
                    "content": "date in UTC when token expires",
                    "type": "text/plain"
                  },
                  "key": "X-Expires-After",
                  "value": "dolor"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "\"dolor\"",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
              "name": "Invalid username/password supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "07031763-f295-46c5-97db-9b8638ad5604",
          "length": 20,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "674c1681-7f97-4d39-a3f4-e023d0919b5f",
          "scriptId": "3bed73af-2b25-4243-93c1-e27f84847e68",
          "execution": "dcaac427-8a59-4da8-adb4-022cf6086c27"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "1490f954-f5e4-4ee8-b8f6-83230cce0b81",
          "timestamp": 1596533463504,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ff6c4092-c4cf-49c1-96be-f9ef38001177",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a76ee246-d873-4a9a-b8c4-7f44cced4897"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is null",
          "message": "expected response to have status reason null but got undefined",
          "stack": "AssertionError: expected response to have status reason null but got undefined\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "3af519a5eae343afff1a10dcda1222cf",
          "id": "2fa09917-6a29-4277-99c4-ff8926ea6e0e",
          "timestamp": 1596533463512,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
          "name": "Logs out current logged in user session",
          "request": {
            "name": "Logs out current logged in user session",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                "logout"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {}
              },
              "status": "Internal Server Error",
              "code": 500,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                ],
                "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
              }
            }
          ]
        },
        "parent": {
          "id": "82bfe552-4212-4b95-971b-d8881c1cc274",
          "name": "user",
          "item": [
            {
              "id": "cfe3d843-a4d2-416a-832b-051863f79e24",
              "name": "Create user",
              "request": {
                "name": "Create user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "672c55c9-45c3-4c20-80f2-498c2f583026",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15dae29b-8521-44e2-b570-19df292bc443",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "e315af85-751c-4847-a764-780eefffbfc7"
                  }
                }
              ]
            },
            {
              "id": "79df6ca2-7474-4315-a28a-3fbe06ccd6fe",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithArray"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "348120c1-bbd2-440e-b9e9-dc78d148ed81",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithArray"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e69ce244-72c0-4816-b208-303ef77cd4dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "6597a026-3b95-4059-bbc6-72c603d591de"
                  }
                }
              ]
            },
            {
              "id": "1b721e98-874c-47f0-986e-27b7a356bc2b",
              "name": "Creates list of users with given input array",
              "request": {
                "name": "Creates list of users with given input array",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "createWithList"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b7323d6f-a308-4330-88ad-f01a8108e6ba",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "createWithList"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "POST",
                    "body": {
                      "mode": "raw",
                      "raw": "[\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    },\n    {\n        \"id\": \"<long>\",\n        \"username\": \"<string>\",\n        \"firstName\": \"<string>\",\n        \"lastName\": \"<string>\",\n        \"email\": \"<string>\",\n        \"password\": \"<string>\",\n        \"phone\": \"<string>\",\n        \"userStatus\": \"<integer>\"\n    }\n]"
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b337f720-7535-4e6a-91fe-1dbefdcfefb9",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is default\", function () {pm.response.to.have.status(default);});"
                    ],
                    "_lastExecutionId": "48ee8be2-41c6-4859-977d-ee6c2af78a50"
                  }
                }
              ]
            },
            {
              "id": "354f5957-1f1c-488a-afad-8db3be2b70f2",
              "name": "Logs user into the system",
              "request": {
                "name": "Logs user into the system",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "login"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [
                    {
                      "description": {
                        "content": "(Required) The user name for login",
                        "type": "text/plain"
                      },
                      "key": "username",
                      "value": "<string>"
                    },
                    {
                      "description": {
                        "content": "(Required) The password for login in clear text",
                        "type": "text/plain"
                      },
                      "key": "password",
                      "value": "<string>"
                    }
                  ],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "1bcf1073-b912-4a03-a0fa-5c1e3c7ed730",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "description": {
                        "content": "calls per hour allowed by the user",
                        "type": "text/plain"
                      },
                      "key": "X-Rate-Limit",
                      "value": "-64242167"
                    },
                    {
                      "description": {
                        "content": "date in UTC when token expires",
                        "type": "text/plain"
                      },
                      "key": "X-Expires-After",
                      "value": "dolor"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "\"dolor\"",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "b6df50cd-ad7f-4e87-a216-2426619dcf49",
                  "name": "Invalid username/password supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "login"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [
                        {
                          "key": "username",
                          "value": "<string>"
                        },
                        {
                          "key": "password",
                          "value": "<string>"
                        }
                      ],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3bed73af-2b25-4243-93c1-e27f84847e68",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "dcaac427-8a59-4da8-adb4-022cf6086c27"
                  }
                }
              ]
            },
            {
              "id": "c58cbdb1-74a6-4005-af2a-33776b42fba1",
              "name": "Logs out current logged in user session",
              "request": {
                "name": "Logs out current logged in user session",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    "logout"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "49d0c92e-bbae-4a61-89fe-82b3ca4610a3",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        "logout"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is null\", function () {pm.response.to.have.status(null);});"
                    ],
                    "_lastExecutionId": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
                  }
                }
              ]
            },
            {
              "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
              "name": "{username}",
              "item": [
                {
                  "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
                  "name": "Get user by user name",
                  "request": {
                    "name": "Get user by user name",
                    "description": {
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "json"
                      },
                      "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                      "name": "successful operation",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "OK",
                      "code": 200,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "f379d179-b532-4991-b921-ba0b47124f57",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "GET",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                        ],
                        "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                      }
                    }
                  ]
                },
                {
                  "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
                  "name": "Updated user",
                  "request": {
                    "name": "Updated user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) name that need to be updated",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "*/*"
                      }
                    ],
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                      "name": "Invalid user supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "PUT",
                        "body": {
                          "mode": "raw",
                          "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                      }
                    }
                  ]
                },
                {
                  "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
                  "name": "Delete user",
                  "request": {
                    "name": "Delete user",
                    "description": {
                      "content": "This can only be done by the logged in user.",
                      "type": "text/plain"
                    },
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "description": {
                            "content": "(Required) The name that needs to be deleted",
                            "type": "text/plain"
                          },
                          "type": "any",
                          "value": "<string>",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE"
                  },
                  "response": [
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                      "name": "Invalid username supplied",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    },
                    {
                      "_": {
                        "postman_previewlanguage": "text"
                      },
                      "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                      "name": "User not found",
                      "originalRequest": {
                        "url": {
                          "path": [
                            "user",
                            ":username"
                          ],
                          "host": [
                            "{{baseUrl}}"
                          ],
                          "query": [],
                          "variable": [
                            {
                              "type": "any",
                              "key": "username"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "body": {}
                      },
                      "status": "Not Found",
                      "code": 404,
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "text/plain"
                        }
                      ],
                      "body": "",
                      "cookie": []
                    }
                  ],
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9282df19-7d28-4173-a735-9cabfd853764",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                        ],
                        "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                      }
                    }
                  ]
                }
              ],
              "event": []
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "ff6c4092-c4cf-49c1-96be-f9ef38001177",
          "length": 20,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a76ee246-d873-4a9a-b8c4-7f44cced4897",
          "scriptId": "60256c09-e519-4eff-9609-3f9ab5ee1d85",
          "execution": "985613d4-f2be-4d93-a37c-1f4dbdced54f"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "e95e5da9-8667-4512-93f5-f931fba1953d",
          "timestamp": 1596533463751,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f379d179-b532-4991-b921-ba0b47124f57",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e8ed9122-ef07-4916-8028-555ed0562e67",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed847a7e-ef19-42e2-8450-e913838a1e36"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "445013cff5fe7d306a2143c8cdc4fe24",
          "id": "7dea9227-a9d5-468f-8d22-efee9615594d",
          "timestamp": 1596533463756,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
          "name": "Get user by user name",
          "request": {
            "name": "Get user by user name",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
              "name": "successful operation",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "f379d179-b532-4991-b921-ba0b47124f57",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                ],
                "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "e8ed9122-ef07-4916-8028-555ed0562e67",
          "length": 20,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ed847a7e-ef19-42e2-8450-e913838a1e36",
          "scriptId": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
          "execution": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "12288c91-c809-46e7-a887-e67235a5a91e",
          "timestamp": 1596533463994,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3acfc684-4801-4a76-ae46-dffc98b677e9",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9b13071-7d3b-47b7-9ac4-0435204da820"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:19)",
          "checksum": "2ab8416ff7f1e8fcf2db537a453e6c30",
          "id": "2da1ef22-78aa-4902-8216-04ae343f9488",
          "timestamp": 1596533464001,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 19,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
          "name": "Updated user",
          "request": {
            "name": "Updated user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) name that need to be updated",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "*/*"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
              "name": "Invalid user supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "3acfc684-4801-4a76-ae46-dffc98b677e9",
          "length": 20,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9b13071-7d3b-47b7-9ac4-0435204da820",
          "scriptId": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
          "execution": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
        }
      },
      {
        "error": {
          "code": "SELF_SIGNED_CERT_IN_CHAIN",
          "name": "Error",
          "message": "self signed certificate in certificate chain",
          "stack": "Error: self signed certificate in certificate chain\n    at TLSSocket.onConnectSecure (_tls_wrap.js:1501:34)\n    at TLSSocket.emit (events.js:315:20)\n    at TLSSocket._finishInit (_tls_wrap.js:936:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:710:12)",
          "checksum": "54f974528607f5e7a97566cdaaf735ef",
          "id": "56e11d26-8d67-4222-b695-0275cb55bc87",
          "timestamp": 1596533464237,
          "stacktrace": [
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 1501,
              "functionName": "TLSSocket.onConnectSecure",
              "typeName": "TLSSocket",
              "methodName": "onConnectSecure",
              "columnNumber": 34,
              "native": false
            },
            {
              "fileName": "events.js",
              "lineNumber": 315,
              "functionName": "TLSSocket.emit",
              "typeName": "TLSSocket",
              "methodName": "emit",
              "columnNumber": 20,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 936,
              "functionName": "TLSSocket._finishInit",
              "typeName": "TLSSocket",
              "methodName": "_finishInit",
              "columnNumber": 8,
              "native": false
            },
            {
              "fileName": "_tls_wrap.js",
              "lineNumber": 710,
              "functionName": "TLSWrap.ssl.onhandshakedone",
              "typeName": "TLSWrap",
              "methodName": "ssl.onhandshakedone",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "request",
        "source": {
          "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9282df19-7d28-4173-a735-9cabfd853764",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "634211e5-43a9-414f-8958-cce771503e9a",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a09d5284-1ceb-4f8b-a735-80961725ff7a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 400",
          "message": "expected { Object (id, _details, ...) } to have property 'code'",
          "stack": "AssertionError: expected { Object (id, _details, ...) } to have property 'code'\n   at Object.eval sandbox-script.js:1:20)",
          "checksum": "84c31d8731ca94e279c57f674f5eaa0e",
          "id": "683ec187-5369-4cd2-894d-b5607c1ab65e",
          "timestamp": 1596533464244,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 20,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
          "name": "Delete user",
          "request": {
            "name": "Delete user",
            "description": {
              "content": "This can only be done by the logged in user.",
              "type": "text/plain"
            },
            "url": {
              "path": [
                "user",
                ":username"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": [
                {
                  "description": {
                    "content": "(Required) The name that needs to be deleted",
                    "type": "text/plain"
                  },
                  "type": "any",
                  "value": "<string>",
                  "key": "username"
                }
              ]
            },
            "method": "DELETE"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
              "name": "Invalid username supplied",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Bad Request",
              "code": 400,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            },
            {
              "_": {
                "postman_previewlanguage": "text"
              },
              "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
              "name": "User not found",
              "originalRequest": {
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "type": "any",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE",
                "body": {}
              },
              "status": "Not Found",
              "code": 404,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "text/plain"
                }
              ],
              "body": "",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9282df19-7d28-4173-a735-9cabfd853764",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                ],
                "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
              }
            }
          ]
        },
        "parent": {
          "id": "9119ec70-d695-464f-9efe-ac3d8997b9d8",
          "name": "{username}",
          "item": [
            {
              "id": "067a7b87-25d2-44e1-a9dd-061a6fcd6cf8",
              "name": "Get user by user name",
              "request": {
                "name": "Get user by user name",
                "description": {
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be fetched. Use user1 for testing. ",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "GET"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "json"
                  },
                  "id": "5888c03b-a089-4f32-85e1-6682e2a846c8",
                  "name": "successful operation",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "body": "{\n \"id\": \"<long>\",\n \"username\": \"<string>\",\n \"firstName\": \"<string>\",\n \"lastName\": \"<string>\",\n \"email\": \"<string>\",\n \"password\": \"<string>\",\n \"phone\": \"<string>\",\n \"userStatus\": \"<integer>\"\n}",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "f379d179-b532-4991-b921-ba0b47124f57",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "91b29b1c-1d3c-4d0d-b380-4942e5ded731",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "GET",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3c657dd3-4e6d-4f0a-837e-d6ddf8e6100b",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {pm.response.to.have.status(200);});"
                    ],
                    "_lastExecutionId": "093db26c-8a96-4f0b-8be6-57a1b7d271a5"
                  }
                }
              ]
            },
            {
              "id": "2483895a-d137-4f6a-baea-d34feb9ff1e0",
              "name": "Updated user",
              "request": {
                "name": "Updated user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) name that need to be updated",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "*/*"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "1a55880d-f568-444c-bc22-83a6c90b751c",
                  "name": "Invalid user supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "4925285a-636e-40ec-8fc3-5090278a04b7",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "PUT",
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"id\": \"<long>\",\n    \"username\": \"<string>\",\n    \"firstName\": \"<string>\",\n    \"lastName\": \"<string>\",\n    \"email\": \"<string>\",\n    \"password\": \"<string>\",\n    \"phone\": \"<string>\",\n    \"userStatus\": \"<integer>\"\n}"
                    }
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f66888e-f6c7-41d4-b06b-625f05a877ef",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "42ee2917-34f0-4c3a-82c7-5bc5a5e9a35a"
                  }
                }
              ]
            },
            {
              "id": "7715dac3-e5b7-4b08-84e5-1828bc5b2fc5",
              "name": "Delete user",
              "request": {
                "name": "Delete user",
                "description": {
                  "content": "This can only be done by the logged in user.",
                  "type": "text/plain"
                },
                "url": {
                  "path": [
                    "user",
                    ":username"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": [
                    {
                      "description": {
                        "content": "(Required) The name that needs to be deleted",
                        "type": "text/plain"
                      },
                      "type": "any",
                      "value": "<string>",
                      "key": "username"
                    }
                  ]
                },
                "method": "DELETE"
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "dfd5c8be-e623-48ed-9568-b46b898c4b21",
                  "name": "Invalid username supplied",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                },
                {
                  "_": {
                    "postman_previewlanguage": "text"
                  },
                  "id": "30985918-12ef-4722-96c3-b7c99eba20f9",
                  "name": "User not found",
                  "originalRequest": {
                    "url": {
                      "path": [
                        "user",
                        ":username"
                      ],
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "query": [],
                      "variable": [
                        {
                          "type": "any",
                          "key": "username"
                        }
                      ]
                    },
                    "method": "DELETE",
                    "body": {}
                  },
                  "status": "Not Found",
                  "code": 404,
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "text/plain"
                    }
                  ],
                  "body": "",
                  "cookie": []
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9282df19-7d28-4173-a735-9cabfd853764",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 400\", function () {pm.response.to.have.status(400);});"
                    ],
                    "_lastExecutionId": "92763bae-2286-46b5-8325-6f30847550b3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "634211e5-43a9-414f-8958-cce771503e9a",
          "length": 20,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "a09d5284-1ceb-4f8b-a735-80961725ff7a",
          "scriptId": "9282df19-7d28-4173-a735-9cabfd853764",
          "execution": "92763bae-2286-46b5-8325-6f30847550b3"
        }
      }
    ],
    "error": null
  }
}